// game=csgo, version=1.36.7.9, appid=730, map=cs_italy, totalcvar=2353

// 0 - disable, 1 - default, 2 - force always ON
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
@panorama_ECO_mode "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2"
BlendBonesMode "2"

// Defines how frequently the server notifies clients that a player damaged a friend
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "3.0"
CS_WarnFriendlyDamageInterval "3.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
PhysPMC "0"

// Turn on achievement debug msgs.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
achievement_debug "0"

// Turn off achievements.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
achievement_disable "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "122"
adsp_alley_min "122"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "126"
adsp_courtyard_min "126"

// Flags: FCVAR_ARCHIVE
// Default: "0"
adsp_debug "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "112"
adsp_door_height "112"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "106"
adsp_duct_min "106"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "110"
adsp_hall_min "110"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "108"
adsp_low_ceiling "108"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "126"
adsp_opencourtyard_min "126"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "130"
adsp_openspace_min "130"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "118"
adsp_openstreet_min "118"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "130"
adsp_openwall_min "130"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "102"
adsp_room_min "102"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.2"
adsp_scale_delay_feedback "0.2"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.2"
adsp_scale_delay_gain "0.2"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "118"
adsp_street_min "118"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "114"
adsp_tunnel_min "114"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "128"
adsp_wall_height "128"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
ai_LOS_mode "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_auto_contact_solver "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_block_damage "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_assault "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_avoidancebounds "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_directnavprobe "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_doors "0"

// Debug the NPC dynamic interaction system.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_dyninteractions "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_efficiency "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_enemies "0"

// Show random expression decisions for NPCs.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_expressions "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_follow "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_loners "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_looktargets "0"

// NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
ai_debug_los "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_nav "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_ragdoll_magnets "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
ai_debug_shoot_positions "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_speech "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_squads "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debug_think_ticks "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_debugscriptconditions "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_default_efficient "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
ai_drawbattlelines "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_efficiency_override "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_enable_fear_behavior "1"

// Maximum frametime to still play background expressions.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.05"
ai_expression_frametime "0.05"

// Disable npc background expressions when you can't see them.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_expression_optimization "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "720"
ai_fear_player_dist "720"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_find_lateral_cover "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_find_lateral_los "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_follow_use_points "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_follow_use_points_when_moving "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_force_serverside_ragdoll "0"

// frametime limit for min efficiency AIE_NORMAL (in sec's).
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "50"
ai_frametime_limit "50"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.0"
ai_lead_time "0.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_moveprobe_debug "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_moveprobe_jump_debug "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_moveprobe_usetracelist "0"

// Draw paths tried during search for bodysnatcher pathing
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_nav_debug_experimental_pathing "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_navigator_generate_spikes "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "8"
ai_navigator_generate_spikes_strength "8"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_no_local_paths "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_no_node_cache "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_no_select_box "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_no_steer "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_no_talk_delay "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_norebuildgraph "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_path_adjust_speed_on_immediate_turns "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_path_insert_pause_at_est_end "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_path_insert_pause_at_obstruction "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_post_frame_navigation "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "512"
ai_radial_max_link_dist "512"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.1"
ai_reaction_delay_alert "0.1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.3"
ai_reaction_delay_idle "0.3"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_rebalance_thinks "1"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "0"
ai_report_task_timings_on_limit "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_sequence_debug "0"

// Shows that bones that are setup every think
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_setupbones_debug "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1.0"
ai_shot_bias "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ai_shot_bias_max "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "-1.0"
ai_shot_bias_min "-1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_shot_stats "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1000"
ai_shot_stats_term "1000"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_show_hull_attacks "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_show_think_tolerance "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_simulate_task_overtime "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.6"
ai_spread_cone_focus_time "0.6"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "3.0"
ai_spread_defocused_cone_multiplier "3.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.8"
ai_spread_pattern_focus_time "0.8"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_strong_optimizations "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_strong_optimizations_no_checkstand "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_task_pre_script "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ai_test_moveprobe_ignoresmall "0"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "0"
ai_think_limit_label "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_use_clipped_paths "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_use_efficiency "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_use_frame_think_limits "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_use_think_optimizations "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
ai_use_visibility_cache "1"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
ai_vehicle_avoidance "1"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_338mag_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2800"
ammo_338mag_impulse "2800"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "30"
ammo_338mag_max "30"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_357sig_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2000"
ammo_357sig_impulse "2000"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "52"
ammo_357sig_max "52"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "12"
ammo_357sig_min_max "12"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "26"
ammo_357sig_p250_max "26"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "24"
ammo_357sig_small_max "24"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_45acp_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2100"
ammo_45acp_impulse "2100"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "100"
ammo_45acp_max "100"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_50AE_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2400"
ammo_50AE_impulse "2400"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "35"
ammo_50AE_max "35"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_556mm_box_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2400"
ammo_556mm_box_impulse "2400"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "200"
ammo_556mm_box_max "200"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_556mm_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2400"
ammo_556mm_impulse "2400"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "90"
ammo_556mm_max "90"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "40"
ammo_556mm_small_max "40"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_57mm_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2000"
ammo_57mm_impulse "2000"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "100"
ammo_57mm_max "100"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_762mm_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2400"
ammo_762mm_impulse "2400"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "90"
ammo_762mm_max "90"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_9mm_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2000"
ammo_9mm_impulse "2000"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "120"
ammo_9mm_max "120"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
ammo_buckshot_headshot_mult "1.0"

// You must enable tweaking via tweak_ammo_impulses to use this value.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "600"
ammo_buckshot_impulse "600"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "32"
ammo_buckshot_max "32"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3"
ammo_grenade_limit_breachcharge "3"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
ammo_grenade_limit_default "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
ammo_grenade_limit_flashbang "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3"
ammo_grenade_limit_snowballs "3"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3"
ammo_grenade_limit_total "3"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "4"
ammo_item_limit_healthshot "4"

// Toggle the 3-way animation blending code.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
anim_3wayblend "1"

// Enable procedural twist bones.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
anim_twistbones_enabled "0"

// Allow AsyncBegin/EndRead()
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
async_allow_held_files "1"

// Set the async filesystem mode (0 = async, 1 = synchronous)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
async_mode "0"

// Force async reads to serialize for profiling
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
async_serialize "0"

// Simulate a delay of up to a set msec per file operation
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
async_simulate_delay "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.99"
autoaim_max_deflect "0.99"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "2160"
autoaim_max_dist "2160"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
autoaim_viewing_client "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
blackbox "1"

// If nonzero, bots may use grenades.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_allow_grenades "1"

// If nonzero, bots may use the machine gun.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_allow_machine_guns "1"

// If nonzero, bots may use pistols.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_allow_pistols "1"

// If nonzero, bots may use rifles.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_allow_rifles "1"

// If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands, nor pursue scenario goals.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_allow_rogues "1"

// If nonzero, bots may use shotguns.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_allow_shotguns "1"

// If nonzero, bots may use sniper rifles.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_allow_snipers "1"

// If nonzero, bots may use sub-machine guns.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_allow_sub_machine_guns "1"

// If nonzero, bots with high co-op may automatically follow a nearby human player.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
bot_auto_follow "0"

// If nonzero, bots will automatically leave to make room for human players.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
bot_auto_vacate "1"

// Upper bound above Average Human Contribution Score that a bot must be above to change its difficulty
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "-20" Max: "20"
// Default: "5.0"
bot_autodifficulty_threshold_high "0.0"

// Lower bound below Average Human Contribution Score that a bot must be below to change its difficulty
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "-20" Max: "20"
// Default: "-2.0"
bot_autodifficulty_threshold_low "-2.0"

// Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "normal"
bot_chatter "normal"

// 0 = Use old bot chatter system, 1 = Use response rules
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
bot_chatter_use_rr "1"

// Determines whether bots can be controlled by players
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
bot_controllable "1"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.3"
bot_coop_force_throw_grenade_chance "0.3"

// Max distance bots can see targets (in coop) when they are idle, dormant, hiding or asleep.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Min: "-1"
// Default: "1400"
bot_coop_idle_max_vision_distance "1400"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
bot_crouch "0"

// For internal testing purposes.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
bot_debug "0"

// For internal testing purposes.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
bot_debug_target "0"

// If nonzero and there is a human on the team, the bots will not do the scenario tasks.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
bot_defer_to_human_goals "0"

// If nonzero and there is a human on the team, the bots will not get scenario items.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_defer_to_human_items "1"

// Defines the skill of bots joining the game.  Values are: 0=easy, 1=normal, 2=hard, 3=expert.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_difficulty "1"

// If nonzero, bots will not fire weapons (for debugging).
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "0"
bot_dont_shoot "0"

// If nonzero, bots will not buy if their money falls below this amount.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2000"
bot_eco_limit "2000"

// If nonzero, bots use no CPU for AI. Instead, they run around randomly.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
bot_flipout "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
bot_force_duck "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
bot_freeze "0"

// the list of weapons that CT bots start with in gun game select
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "deagle awp p90 aug m4a1"
bot_gungameselect_weapons_ct "deagle awp p90 aug m4a1"

// the list of weapons that T bots start with in gun game select
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "deagle awp p90 ak47 sg556"
bot_gungameselect_weapons_t "deagle awp p90 ak47 sg556"

// Bots will not see non-bot players.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
bot_ignore_players "0"

// If nonzero, bots wait until a player joins before entering the game.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
bot_join_after_player "1"

// Prevents bots from joining the server for this many seconds after a map change.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
bot_join_delay "0"

// Prevents bots from joining the server while warmup phase is active.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
bot_join_in_warmup "1"

// Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "any"
bot_join_team "any"

// bots are given these items at round start
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: ""
bot_loadout ""

// Max distance bots can see targets.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Min: "-1"
// Default: "-1"
bot_max_vision_distance_override "-1"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
bot_mimic "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "180"
bot_mimic_yaw_offset "180"

// This string is prefixed to the name of all bots that join the game.
// <difficulty> will be replaced with the bot's difficulty.
// <weaponclass> will be replaced with the bot's desired weapon class.
// <skill> will be replaced with a 0-100 representation of the bot's skill.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: ""
bot_prefix ""

// The filename from which bot profiles will be read.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "BotProfile.db"
bot_profile_db "BotProfile.db"

// Determines the total number of bots in the game.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10"
bot_quota "0"

// Determines the type of quota.
// Allowed values: 'normal', 'fill', and 'match'.
// If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota.
// If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "normal"
bot_quota_mode "fill"

// should bots ignore their prefered weapons and just buy weapons at random?
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
bot_randombuy "0"

// Show areas where rushing players will initially meet.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
bot_show_battlefront "0"

// For internal testing purposes.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
bot_show_nav "0"

// Show when each nav area can first be reached by each team.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
bot_show_occupy_time "0"

// If nonzero, immediately stops all bot processing.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
bot_stop "0"

// For internal testing purposes.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
bot_traceview "0"

// If nonzero, bots can only walk, not run.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
bot_walk "0"

// If nonzero, bots will stay in idle mode and not attack.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
bot_zombie "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
breakable_disable_gib_limit "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
breakable_multiplayer "1"

// number of frames to look at when figuring out average frametimes
// Flags: FCVAR_ARCHIVE
// Default: "30"
budget_averages_window "30"

// how translucent the budget panel is
// Flags: FCVAR_ARCHIVE
// Default: "128"
budget_background_alpha "128"

// how translucent the budget panel is
// Flags: FCVAR_ARCHIVE
// Default: "128"
budget_bargraph_background_alpha "128"

// budget bargraph range in milliseconds
// Flags: FCVAR_ARCHIVE
// Default: "16.6666666667"
budget_bargraph_range_ms "16.6666666667"

// number of samples to draw in the budget history window.  The lower the better as far as rendering overhead of the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "100"
budget_history_numsamplesvisible "100"

// budget history range in milliseconds
// Flags: FCVAR_ARCHIVE
// Default: "66.666666667"
budget_history_range_ms "66.666666667"

// number between 0 and 1
// Flags: FCVAR_ARCHIVE
// Default: ".25"
budget_panel_bottom_of_history_fraction ".25"

// height in pixels of the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "384"
budget_panel_height "384"

// width in pixels of the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "512"
budget_panel_width "512"

// number of pixels from the left side of the game screen to draw the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "0"
budget_panel_x "0"

// number of pixels from the top side of the game screen to draw the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "50"
budget_panel_y "50"

// number of frames to look at when figuring out peak frametimes
// Flags: FCVAR_ARCHIVE
// Default: "30"
budget_peaks_window "30"

// enable/disable averages in the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "0"
budget_show_averages "0"

// turn history graph off and on. . good to turn off on low end
// Flags: FCVAR_ARCHIVE
// Default: "1"
budget_show_history "1"

// enable/disable peaks in the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "1"
budget_show_peaks "1"

// Max # of console bytes to put into bug report body (full text still attached).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "15000"
bugreporter_console_bytes "15000"

// Include .bsp for internal bug submissions.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
bugreporter_includebsp "1"

// Frames to delay before taking snapshot
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "15"
bugreporter_snapshot_delay "15"

// Upload attachments asynchronously
// Flags: FCVAR_ARCHIVE
// Default: "0"
bugreporter_uploadasync "0"

// Username to use for bugreporter
// Flags: FCVAR_ARCHIVE
// Default: ""
bugreporter_username ""

// Set to 1 when you're secondary cameraman and need to override the primary cameraman's observer target and mode
// Flags: FCVAR_RELEASE
// Default: "0"
cameraman_override "0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "300"
cash_player_bomb_defused "200"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "300"
cash_player_bomb_planted "200"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-30"
cash_player_damage_hostage "-30"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
cash_player_get_killed "0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "150"
cash_player_interact_with_hostage "300"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "300"
cash_player_killed_enemy_default "200"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
cash_player_killed_enemy_factor "0.5"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1000"
cash_player_killed_hostage "-1000"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-300"
cash_player_killed_teammate "-3300"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1000"
cash_player_rescued_hostage "1000"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
cash_player_respawn_amount "0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3250"
cash_team_elimination_bomb_map "2700"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2000"
cash_team_elimination_hostage_map_ct "2300"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1000"
cash_team_elimination_hostage_map_t "2000"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
cash_team_hostage_alive "0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "500"
cash_team_hostage_interaction "500"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1400"
cash_team_loser_bonus "2400"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "500"
cash_team_loser_bonus_consecutive_rounds "0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "800"
cash_team_planted_bomb_but_defused "200"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
cash_team_rescued_hostage "0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1000"
cash_team_survive_guardian_wave "1000"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3500"
cash_team_terrorist_win_bomb "2700"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3250"
cash_team_win_by_defusing_bomb "2700"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3500"
cash_team_win_by_hostage_rescue "3000"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3250"
cash_team_win_by_time_running_out_bomb "2700"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3250"
cash_team_win_by_time_running_out_hostage "2000"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
cash_team_winner_bonus_consecutive_rounds "0"

// In multiplayer games, don't repeat captions more often than this many seconds.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "5"
cc_norepeat "5"

// Show missing closecaption entries.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
cc_showmissing "0"

// If set one, many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info
// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "0"
chet_debug_idle "0"

// Spew choreo. Use a sub-string or * to display all events.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: ""
choreo_spew_filter ""

// Client downloads customization files
// Flags: FCVAR_ARCHIVE
// Default: "1"
cl_allowdownload "1"

// Client uploads customization files
// Flags: FCVAR_ARCHIVE
// Default: "1"
cl_allowupload "1"

// Current clan ID for name decoration
// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_ARCHIVE|FCVAR_USERINFO
// Default: "0"
cl_clanid "0"

// Enable/disable clock correction on the client.
// Flags: FCVAR_CHEAT
// Default: "1"
cl_clock_correction "1"

// Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount if the difference between the client and server clock is equal to or larger than cl_clock_correction_adjustment_max_offset.
// Flags: FCVAR_CHEAT
// Default: "200"
cl_clock_correction_adjustment_max_amount "200"

// As the clock offset goes from cl_clock_correction_adjustment_min_offset to this value (in milliseconds), it moves towards applying cl_clock_correction_adjustment_max_amount of adjustment. That way, the response is small when the offset is small.
// Flags: FCVAR_CHEAT
// Default: "90"
cl_clock_correction_adjustment_max_offset "90"

// If the clock offset is less than this amount (in milliseconds), then no clock correction is applied.
// Flags: FCVAR_CHEAT
// Default: "10"
cl_clock_correction_adjustment_min_offset "10"

// Force clock correction to match the server tick + this offset (-999 disables it).
// Flags: FCVAR_CHEAT
// Default: "999"
cl_clock_correction_force_server_tick "999"

// Show debugging info about the clock drift. 
// Flags: FCVAR_CHEAT
// Default: "0"
cl_clock_showdebuginfo "0"

// Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server's.
// Flags: FCVAR_CHEAT
// Default: "150"
cl_clockdrift_max_ms "150"

// Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server's.
// Flags: FCVAR_CHEAT
// Default: "0"
cl_clockdrift_max_ms_threadmode "0"

// Cloud enabled from (from HKCU\Software\Valve\Steam\Apps\appid\Cloud)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "-1"
cl_cloud_settings "-1"

// Max number of command packets sent to server per second
// Flags: FCVAR_ARCHIVE|FCVAR_USERINFO
// Min: "10" Max: "128"
// Default: "64"
cl_cmdrate "64"

// Preferred teammate color
// Flags: FCVAR_ARCHIVE|FCVAR_USERINFO
// Min: "0" Max: "4"
// Default: "0"
cl_color "0"

// Configuration layout version. Bump this to force a reset of the PS3 save game / settings.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "8"
cl_configversion "8"

// How long until we timeout on our network connection because of connectivity loss (empty if no problem)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: ""
cl_connection_trouble_info ""

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
cl_csm_auto_entity "1"

// Flags: FCVAR_RELEASE
// Default: "0"
cl_debug_ugc_downloads "0"

// Key to decrypt encrypted GOTV messages
// Flags: FCVAR_RELEASE
// Default: ""
cl_decryptdata_key ""

// Key to decrypt public encrypted GOTV messages
// Flags: FCVAR_RELEASE
// Default: ""
cl_decryptdata_key_pub ""

// Determines whether downloads of external resources are allowed during demo playback (0:no,1:workshop,2:all)
// Flags: FCVAR_RELEASE
// Default: "1"
cl_download_demoplayer "1"

// Determines which files can be downloaded from the server (all, none, nosounds)
// Flags: FCVAR_ARCHIVE
// Default: "all"
cl_downloadfilter "all"

// For debugging, draw entity states to console
// Flags: FCVAR_CHEAT
// Default: "0"
cl_entityreport "0"

// Force connection attempts to time out
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
cl_failremoteconnections "0"

// For debugging. Force the engine to flush an entity packet.
// Flags: FCVAR_CHEAT
// Default: "0"
cl_flushentitypacket "0"

// Whether we should force preloading.
// Flags: FCVAR_ARCHIVE
// Default: "0"
cl_forcepreload "0"

// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE|FCVAR_MATERIAL_SYSTEM_THREAD
// Min: "-1" Max: "1"
// Default: "-0.5"
cl_grass_mip_bias "-0.5"

// If set to 1, server IPs will be hidden in the console (except when you type 'status')
// Flags: FCVAR_RELEASE
// Default: "0"
cl_hideserverip "0"

// Force client to ignore packets (for debugging).
// Flags: FCVAR_CHEAT
// Default: "0"
cl_ignorepackets "0"

// Enables or disables interpolation on listen servers or during demo playback
// Flags: FCVAR_RELEASE
// Default: "1"
cl_interpolate "1"

// Language (from Steam API)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "english"
cl_language "english"

// Allows the client to playback screenshot and jpeg commands in demos.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
cl_playback_screenshots "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
cl_proximity_grass "1"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
cl_remove_old_ugc_downloads "1"

// Delay in seconds before the client will resend the 'connect' attempt
// Flags: FCVAR_RELEASE
// Min: "1.5" Max: "20"
// Default: "2"
cl_resend "2"

// Total time allowed for the client to resend the 'connect' attempt
// Flags: FCVAR_RELEASE
// Min: "1.5" Max: "20000"
// Default: "60"
cl_resend_timeout "60"

// Low priority dlights are replaced by high priority ones
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
cl_retire_low_priority_lights "0"

// Saves screenshots to the Steam's screenshot library
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "0"
cl_savescreenshotstosteam "0"

// Location to tag the screenshot with
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: ""
cl_screenshotlocation ""

// Custom Screenshot name
// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
cl_screenshotname ""

// User to tag in the screenshot
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: ""
cl_screenshotusertag ""

// How often to flash demo recording/playback overlay (0 - disable overlay, -1 - show always)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
cl_showdemooverlay "0"

// Print event firing info in the console
// Flags: FCVAR_CHEAT
// Default: "0"
cl_showevents "0"

// Allow plugins to display messages to you
// Flags: FCVAR_ARCHIVE
// Default: "0"
cl_showpluginmessages2 "0"

// Use SIMD bone setup.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
cl_simdbones "0"

// Set to 1 to skip any models that don't go through the model fast path
// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
cl_skipslowpath "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1000"
cl_teamid_max "1000"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "200"
cl_teamid_min "200"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "248 246 45"
cl_teammate_color_1 "248 246 45"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "161 25 240"
cl_teammate_color_2 "161 25 240"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0 181 98"
cl_teammate_color_3 "0 181 98"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "92 168 255"
cl_teammate_color_4 "92 168 255"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "255 155 37"
cl_teammate_color_5 "255 155 37"

// After this many seconds without receiving a packet from the server, the client will disconnect itself
// Flags: FCVAR_ARCHIVE
// Min: "4" Max: "30"
// Default: "30"
cl_timeout "30"

// stats for console title data block1 i/o version.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "14"
cl_titledataversionblock1 "14"

// stats for console title data block2 i/o version.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "8"
cl_titledataversionblock2 "8"

// stats for console title data block3 i/o version.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "48"
cl_titledataversionblock3 "48"

// Number of packets per second of updates you are requesting from the server
// Flags: FCVAR_ARCHIVE|FCVAR_USERINFO|FCVAR_NOT_CONNECTED
// Default: "64"
cl_updaterate "64"

// 1 use SIMD bones 0 use scalar bones.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
cl_use_simd_bones "1"

// Amount of time between receiving voice data and playing the audio
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.04"
cl_voice_buffer_time "0.04"

// Filter voice by name substring
// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
cl_voice_filter ""

// Amount of time between receiving voice data and playing the audio in hltv
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.3"
cl_voice_hltv_buffer_time "0.3"

// Host game client port
// Flags: FCVAR_RELEASE
// Default: "27005"
clientport "27005"

// Enable close captioning.
// Flags: FCVAR_ARCHIVE|FCVAR_ARCHIVE_XBOX
// Default: "0"
closecaption "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.2"
collision_shake_amp "0.2"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.5"
collision_shake_freq "0.5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.5"
collision_shake_time "0.5"

// Desired commentary mode state.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
commentary "0"

// Automatically set by the game when a commentary file is available for the current map.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
commentary_available "0"

// Disables drawing of notification area (for taking screenshots).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
con_drawnotify "1"

// Allows the console to be activated.
// Flags: FCVAR_ARCHIVE
// Default: "0"
con_enable "0"

// Filters console output based on the setting of con_filter_text. 1 filters completely, 2 displays filtered text brighter than other text.
// Flags: FCVAR_RELEASE|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
con_filter_enable "0"

// Text with which to filter console spew. Set con_filter_enable 1 or 2 to activate.
// Flags: FCVAR_RELEASE|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: ""
con_filter_text ""

// Text with which to filter OUT of console spew. Set con_filter_enable 1 or 2 to activate.
// Flags: FCVAR_RELEASE|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: ""
con_filter_text_out ""

// Console output gets written to this file
// Flags: FCVAR_RELEASE
// Default: ""
con_logfile ""

// How long to display recent console text to the upper part of the game window
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "8"
con_notifytime "8"

// Con_NPrint background alpha.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "50"
con_nprint_bgalpha "50"

// Con_NPrint border size.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "5"
con_nprint_bgborder "5"

// Prefix console.log entries with timestamps
// Flags: FCVAR_RELEASE
// Default: "0"
con_timestamp "0"

// Print console text to low level printout.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
con_trace "0"

// Is the console window active
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: ""
console_window_open ""

// Number of console lines to overlay for debugging.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "8"
contimes "8"

// amount of contribution score added for an assist
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
contributionscore_assist "1"

// amount of contribution score for defusing a bomb while at least one enemy remains alive
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "3"
contributionscore_bomb_defuse_major "3"

// amount of contribution score for defusing a bomb after eliminating enemy team
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
contributionscore_bomb_defuse_minor "1"

// amount of contribution score awarded to bomb planter and terrorists remaining alive if bomb explosion wins the round
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
contributionscore_bomb_exploded "1"

// amount of contribution score for planting a bomb
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "2"
contributionscore_bomb_planted "2"

// amount of contribution score for picking up a cash bundle
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
contributionscore_cash_bundle "0"

// amount of contribution score for breaking an item crate
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
contributionscore_crate_break "0"

// amount of contribution score for killing a hostage, normally negative
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "-2"
contributionscore_hostage_kill "-2"

// amount of contribution score added to rescuer per hostage rescued
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "3"
contributionscore_hostage_rescue_major "3"

// amount of contribution score added to all alive CTs per hostage rescued
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
contributionscore_hostage_rescue_minor "1"

// amount of contribution score added for a kill
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "2"
contributionscore_kill "2"

// percentage of victim's contribution score to award to their killer as a bonus
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
contributionscore_kill_factor "0"

// amount of contribution score added for an objective related kill
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "3"
contributionscore_objective_kill "3"

// amount of contribution score for a suicide, normally negative
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "-2"
contributionscore_suicide "-2"

// amount of contribution score for a team kill, normally negative
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "-2"
contributionscore_team_kill "-2"

// Cooperative play.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_NOTIFY
// Default: "0"
coop "0"

// Set CPU frequency monitoring interval in seconds. Zero means disabled.
// Flags: FCVAR_RELEASE
// Min: "0" Max: "10"
// Default: "0"
cpu_frequency_monitoring "0"

// CPU Level - Default: High
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
cpu_level "2"

// cs_AssistDamageThreshold defines the amount of damage needed to score an assist
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "40.0"
cs_AssistDamageThreshold "40.0"

// cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "-2"
cs_ShowStateTransitions "-2"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
cs_enable_player_physics_box "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "2000"
cs_hostage_near_rescue_music_distance "2000"

// Cascaded shadow map quality level, [0,3], 0=VERY_LOW, 3=HIGHEST
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
csm_quality_level "0"

// Bot difficulty for offline play.
// Flags: FCVAR_GAMEDLL|FCVAR_CLIENTDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
custom_bot_difficulty "0"

// Maximum height of player and still test for adsp
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "72"
das_max_z_trace_length "72"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
das_process_overhang_spaces "0"

// Size in MB.
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "0" Max: "128"
// Default: "32"
datacachesize "32"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
dbg_demofile "0"

// Running a deathmatch server.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_NOTIFY
// Default: "0"
deathmatch "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
debug_aim_angle "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
debug_dispatch_server_dump "0"

// Prints CRC for each map lump loaded
// Flags: FCVAR_RELEASE
// Default: "0"
debug_map_crc "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
debug_materialmodifycontrol "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
debug_overlay_fullposition "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
debug_paint_alpha "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
debug_physimpact "0"

// Spew touch link activity
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
debug_touchlinks "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
debug_visibility_monitor "0"

// Angular velocity limit before eyes considered snapped for demo playback.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2000"
demo_avellimit "2000"

// Demo debug info.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
demo_debug "0"

// Enable recording demos (must be set true before loading a map)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
demo_enabledemos "1"

// Go this fast when starting to hold FF button.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "20"
demo_fastforwardfinalspeed "20"

// How many seconds it takes to get to full FF speed.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "5"
demo_fastforwardramptime "5"

// Go this fast when starting to hold FF button.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
demo_fastforwardstartspeed "2"

// Speed to use when fast forwarding to highlights.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "10"
demo_highlight_fastforwardspeed "10"

// Number of seconds between previous highlight event and round start that will fast forward instead of skipping.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "10"
demo_highlight_skipthreshold "10"

// How many seconds after highlight event to start fast forwarding.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "4"
demo_highlight_timeafter "4"

// How many seconds before highlight event to stop fast forwarding.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "6"
demo_highlight_timebefore "6"

// How much origin velocity before it's considered to have 'teleported' causing interpolation to reset.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "4000"
demo_interplimit "4000"

// Do view interpolation during dem playback.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
demo_interpolateview "1"

// Use legacy view interpolation rollback amount in demo playback.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
demo_legacy_rollback "1"

// Pauses demo playback at server tick
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
demo_pauseatservertick "0"

// Quits game after demo playback.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
demo_quitafterplayback "0"

// Record commands typed at console into .dem files.
// Flags: FCVAR_CHEAT
// Default: "1"
demo_recordcommands "1"

// Flags: FCVAR_RELEASE
// Default: "0"
demo_strict_validation "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
dev_force_selected_device "0"

// Displays money account changes for players in the console
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
dev_reportmoneychanges "0"

// Set developer message level
// Flags: FCVAR_RELEASE
// Default: "0"
developer "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
disp_dynamic "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
dispcoll_drawplane "0"

// Flags: FCVAR_CHEAT
// Default: "0"
display_game_events "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
displaysoundlist "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "0"
dsp_automatic "0"

// Flags: FCVAR_CHEAT|FCVAR_DEMO
// Default: "80"
dsp_db_min "80"

// Flags: FCVAR_CHEAT|FCVAR_DEMO
// Default: "0.5"
dsp_db_mixdrop "0.5"

// Flags: FCVAR_CHEAT|FCVAR_DEMO
// Default: "1440.0"
dsp_dist_max "1440.0"

// Flags: FCVAR_CHEAT|FCVAR_DEMO
// Default: "0.0"
dsp_dist_min "0.0"

// Flags: FCVAR_ARCHIVE
// Default: "0"
dsp_enhance_stereo "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "0"
dsp_facingaway "0"

// Flags: FCVAR_CHEAT|FCVAR_DEMO
// Default: "0.8"
dsp_mix_max "0.8"

// Flags: FCVAR_CHEAT|FCVAR_DEMO
// Default: "0.2"
dsp_mix_min "0.2"

// Flags: FCVAR_CHEAT
// Default: "0"
dsp_off "0"

// Flags: FCVAR_DEMO|FCVAR_RELEASE|FCVAR_SERVER_CAN_EXECUTE
// Default: "0"
dsp_player "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "0"
dsp_room "0"

// Flags: FCVAR_CHEAT
// Default: "0"
dsp_slow_cpu "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "40"
dsp_spatial "40"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "50"
dsp_speaker "50"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "1.0"
dsp_vol_2ch "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "0.5"
dsp_vol_4ch "0.5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "0.5"
dsp_vol_5ch "0.5"

// Flags: FCVAR_CHEAT
// Default: "0.8"
dsp_volume "0.8"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "14"
dsp_water "14"

// (SP only) - show entities that were copied using small optimized lists (FL_EDICT_PARTIAL_CHANGE).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
dt_ShowPartialChangeEnts "0"

// (SP only) - enable FL_EDICT_PARTIAL_CHANGE optimization.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
dt_UsePartialChangeEnts "1"

// Print data table warnings?
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
dtwarning "0"

// Watch all fields encoded with this table.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
dtwatchclass ""

// When watching show decode.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
dtwatchdecode "1"

// When watching show encode.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
dtwatchencode "1"

// Watch this entities data table encoding.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "-1"
dtwatchent "-1"

// Watch the named variable.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
dtwatchvar ""

// Enable rendering of debug overlays
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
enable_debug_overlays "1"

// Turns Denormals-Are-Zeroes and Flush-to-Zero on or off
// Flags: FCVAR_RELEASE
// Default: "1"
enable_fast_math "1"

// Flags: FCVAR_ARCHIVE
// Default: "50"
engine_no_focus_sleep "50"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: ""
ent_debugkeys ""

// Visualizes all entity input/output activity.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
ent_messages_draw "0"

// Show entity contexts in ent_text display
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
ent_show_contexts "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "100"
er_colwidth "100"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.2"
er_graphwidthfrac "0.2"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "14"
er_maxname "14"

// All Error() calls will attach a callstack
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
errorcallstacks_enable "0"

// Length of automatic error callstacks
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "20"
errorcallstacks_length "20"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
fast_fogvolume "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
fast_poly_convert "1"

// If friendly fire is off, this will scale the penetration power and damage a bullet does when penetrating another friendly player
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0"
ff_damage_bullet_penetration "0"

// How much to reduce damage done to teammates when shot.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.1"
ff_damage_reduction_bullets "0"

// How much to reduce damage done to teammates by a thrown grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.25"
ff_damage_reduction_grenade "0"

// How much to damage a player does to himself with his own grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
ff_damage_reduction_grenade_self "0"

// How much to reduce damage done to teammates by things other than bullets and grenades.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.25"
ff_damage_reduction_other "0"

// Size of per file buffers. 0 for none
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
filesystem_buffer_size "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "16"
filesystem_max_stdio_read "16"

// Use native FS or STDIO
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
filesystem_native "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
filesystem_report_buffered_io "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
filesystem_unbuffered_io "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
filesystem_use_overlapped_io "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "3"
fire_absorbrate "3"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
fire_dmgbase "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1.0"
fire_dmginterval "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.1"
fire_dmgscale "0.1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "5"
fire_extabsorb "5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "12"
fire_extscale "12"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1.0"
fire_growthrate "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1.0"
fire_heatscale "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.1"
fire_incomingheatscale "0.1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "50"
fire_maxabsorb "50"

// Turns off interactive fish behavior. Fish become immobile and unresponsive.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
fish_dormant "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "-"
flex_expression "-"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "5"
flex_looktime "5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1.0"
flex_maxawaytime "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "7"
flex_maxplayertime "7"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.5"
flex_minawaytime "0.5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "5"
flex_minplayertime "5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
flex_talk "0"

// Flags: FCVAR_CHEAT
// Default: "1"
fog_enable_water_fog "1"

// If enabled, prints diagnostic information about the current fog volume
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
fog_volume_debug "0"

// Keeps track of whether we're forcing english in a localized language.
// Flags: FCVAR_ARCHIVE|FCVAR_ARCHIVE_XBOX
// Default: "0"
force_audio_english "0"

// Frame rate limiter
// Flags: FCVAR_RELEASE
// Default: "300"
fps_max "300"

// Frame rate limiter, main menu
// Flags: FCVAR_RELEASE
// Default: "120"
fps_max_menu "120"

// Frame rate limiter, splitscreen
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "300"
fps_max_splitscreen "300"

// While the fps is below the threshold we will dump a screen shot this often in seconds (i.e. 10 = screen shot every 10 seconds when under the given fps.)
// Flags: FCVAR_CHEAT
// Default: "10"
fps_screenshot_frequency "10"

// Dump a screenshot when the FPS drops below the given value.
// Flags: FCVAR_CHEAT
// Default: "-1"
fps_screenshot_threshold "-1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
free_pass_peek_debug "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
fs_enable_stats "0"

// 0:Off, 1:Any, 2:Sync only
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
fs_monitor_read_from_pack "0"

// 0:Off, 1:All (for tracking accumulated duplicate read times), >1:Microsecond threshold
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
fs_report_long_reads "0"

// 0:Off, 1:Always, 2:Not during map load
// Flags: FCVAR_RELEASE
// Default: "0"
fs_report_sync_opens "0"

// 0 to not display the call-stack when we hit a fs_report_sync_opens warning. Set to 1 to display the call-stack.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
fs_report_sync_opens_callstack "0"

// 0:Off, 1:Warn main thread, 2:Warn other threads
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
fs_warning_mode "0"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_REPLICATED
// Default: "15"
func_break_max_pieces "15"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: ".5"
func_break_reduction_factor ".5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.5"
func_breakdmg_bullet "0.5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1.5"
func_breakdmg_club "1.5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1.25"
func_breakdmg_explosive "1.25"

// Use new style sparks.
// 
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
fx_new_sparks "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
g_Language "0"

// If true, use experimental threaded node graph building.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
g_ai_threadedgraphbuild "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
g_debug_angularsensor "0"

// Enable debug printing about constraint sounds.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
g_debug_constraint_sounds "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
g_debug_doors "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
g_debug_npc_vehicle_roles "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
g_debug_ragdoll_removal "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
g_debug_trackpather "0"

// Set to 1 and restart the map to be warned if the map has no trigger_transition volumes. Set to 2 to see a dump of all entities & associated results during a transition.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
g_debug_transitions "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
g_debug_vehiclebase "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
g_debug_vehicledriver "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
g_debug_vehicleexit "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
g_debug_vehiclesound "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "100"
g_jeepexitspeed "100"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2"
g_ragdoll_important_maxcount "2"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "8"
g_ragdoll_maxcount "8"

// The current game mode (based on game type). See GameModes.txt.
// Flags: FCVAR_GAMEDLL|FCVAR_CLIENTDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
game_mode "0"

// The current game is online.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_CLIENTDLL|FCVAR_MATERIAL_SYSTEM|FCVAR_REPLICATED
// Default: "1"
game_online "1"

// The current game is public.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_CLIENTDLL|FCVAR_MATERIAL_SYSTEM|FCVAR_REPLICATED
// Default: "1"
game_public "1"

// The current game type. See GameModes.txt.
// Flags: FCVAR_GAMEDLL|FCVAR_CLIENTDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
game_type "0"

// When -gamestatsfileoutputonly is specified, file will be emitted here instead of to modpath
// 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: ""
gamestats_file_output_directory ""

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
gameui_xbox "0"

// 0 = knife kill in gungame has no effect on player level, 1 = knife kill demotes player by one level
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
gg_knife_kill_demotes "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
gl_amd_occlusion_workaround "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
gl_nvidia_occlusion_workaround "0"

// Map/mode-specific responserules criteria used by calls to UTIL_GlobalChatter
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
global_chatter_info ""

// Enables the global event log system
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
global_event_log_enabled "0"

// GPU Level - Default: High
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "3"
gpu_level "3"

// Memory Level - Default: High
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
gpu_mem_level "2"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
healthshot_allow_use_at_full "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "50"
healthshot_health "50"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
healthshot_healthboost_damage_multiplier "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
healthshot_healthboost_speed_multiplier "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
healthshot_healthboost_time "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
hl2_episodic "0"

// Print # of IPC calls this number of times per second. If set to -1, the # of IPC calls is shown every frame.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_ShowIPCCallCount "0"

// Memory threshold below which the host should flush caches between server instances
// Flags: FCVAR_RELEASE
// Default: "12"
host_flush_threshold "12"

// Set to lock per-frame time elapse.
// Flags: FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
host_framerate "0"

// How server info gets disclosed in server queries: 0 - query disabled, 1 - show only general info, 2 - show full info
// Flags: FCVAR_RELEASE
// Default: "1"
host_info_show "1"

// Apply cl_cmdrate and cl_updaterate to loopback connection
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_limitlocal "0"

// Current map name.
// Flags: FCVAR_RELEASE
// Default: ""
host_map "cs_italy.bsp"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
host_maplist_recurse_subdirs "1"

// Whether hostname is recorded in game events and GOTV.
// Flags: FCVAR_RELEASE
// Default: "1"
host_name_store "1"

// How players are disclosed in server queries: 0 - query disabled, 1 - show only max players count, 2 - show all players
// Flags: FCVAR_RELEASE
// Default: "1"
host_players_show "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_print_frame_times "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_profile "0"

// How server rules get disclosed in server queries: 0 - query disabled, 1 - query enabled
// Flags: FCVAR_RELEASE
// Default: "1"
host_rules_show "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
host_runframe_input_parcelremainder "1"

// Print a debug message when the client or server cache is missed.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_showcachemiss "0"

// Force the host to sleep a certain number of milliseconds each frame.
// Flags: FCVAR_CHEAT
// Default: "0"
host_sleep "0"

// Show general system running times.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_speeds "0"

// Synchronize real render time to host_framerate if possible.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_syncfps "0"

// Run the host in threaded mode, (0 == off, 1 == if multicore, 2 == force)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_thread_mode "0"

// Run the sound on a thread (independent of mix)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_threaded_sound "0"

// Run the sound on a simple thread not a jobthread
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
host_threaded_sound_simplethread "0"

// Prescale the clock by this amount.
// Flags: FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1.0"
host_timescale "1.0"

// Show hostage AI debug information
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
hostage_debug "0"

// Time for the hostage before it fully drops to ground
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
hostage_drop_time "1"

// How many degrees per second that hostages can turn their feet or upper body.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "720"
hostage_feetyawrate "720"

// When set, the hostage won't play any code driven response rules lines
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
hostage_is_silent "0"

// The HOST file to load.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "host.txt"
hostfile "host.txt"

// Host game server ip
// Flags: FCVAR_RELEASE
// Default: ""
hostip "-1062731676"

// Hostname for server.
// Flags: FCVAR_RELEASE
// Default: ""
hostname "Counter-Strike: Global Offensive"

// Host game server port
// Flags: FCVAR_RELEASE
// Default: "27015"
hostport "27015"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "10"
hud_jeephint_numentries "10"

// When set will ignore UI activation key
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: ""
ignore_ui_activate_key ""

// Force user input to this split screen player.
// Flags: FCVAR_CHEAT
// Default: "0"
in_forceuser "0"

// Amount spawn interval increases for each child
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.1"
inferno_child_spawn_interval_multiplier "0.1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "4"
inferno_child_spawn_max_depth "4"

// Damage per second
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "40"
inferno_damage "40"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
inferno_debug "0"

// Average lifetime of each flame in seconds
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "7"
inferno_flame_lifetime "7"

// Minimum distance between separate flame spawns
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "42"
inferno_flame_spacing "42"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.9"
inferno_forward_reduction_factor "0.9"

// For this long, FF is credited back to the thrower.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "6"
inferno_friendly_fire_duration "6"

// Time between spawning flames for first fire
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.02"
inferno_initial_spawn_interval "0.02"

// Largest time interval for child flame spawning
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.5"
inferno_max_child_spawn_interval "0.5"

// Maximum number of flames that can be created
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "16"
inferno_max_flames "16"

// Maximum distance flames can spread from their initial ignition point
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "150"
inferno_max_range "150"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "16"
inferno_max_trace_per_tick "16"

// Duration each new flame will attempt to spawn new flames
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "3"
inferno_per_flame_spawn_duration "3"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
inferno_scorch_decals "1"

// Angular change from parent
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "45"
inferno_spawn_angle "45"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "20"
inferno_surface_offset "20"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.2"
inferno_velocity_decay_factor "0.2"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.003"
inferno_velocity_factor "0.003"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
inferno_velocity_normal_factor "0"

// Overrides IP for multihomed hosts
// Flags: FCVAR_RELEASE
// Default: "localhost"
ip "localhost"

// Overrides IP used to redirect TV relay connections for NAT hosts
// Flags: FCVAR_RELEASE
// Default: ""
ip_relay ""

// Overrides IP used to bind Steam port for multihomed hosts
// Flags: FCVAR_RELEASE
// Default: ""
ip_steam ""

// Overrides IP used to bind TV port for multihomed hosts
// Flags: FCVAR_RELEASE
// Default: ""
ip_tv ""

// Overrides IP used to bind TV1 port for multihomed hosts
// Flags: FCVAR_RELEASE
// Default: ""
ip_tv1 ""

// Analog axis range before a button press is registered.
// Flags: FCVAR_ARCHIVE
// Default: "0.3"
joy_axisbutton_threshold "0.3"

// 0 => Cross-shaped deadzone (default), 1 => Square deadzone.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
joy_deadzone_mode "0"

// Wingman warrior centering hack.
// Flags: FCVAR_ARCHIVE
// Default: "0"
joy_wingmanwarrior_centerhack "0"

// Automatically set to 1 if an xcontroller has been detected.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
joy_xcontroller_found "0"

// jpeg screenshot quality.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "90"
jpeg_quality "90"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "100"
knife_damage_scale "100"

// Flags: FCVAR_CHEAT
// Default: "2"
lightcache_maxmiss "2"

// Set a secret string that will be hashed when using logaddress with explicit token hash.
// Flags: FCVAR_RELEASE
// Default: ""
logaddress_token_secret ""

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
loopsingleplayermaps "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "listenserver.cfg"
lservercfgfile "listenserver.cfg"

// Disable area to area connection testing.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
map_noareas "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
map_wants_save_disable "0"

// repeats the same map after each match instead of using the map cycle
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mapcycledisabled "0"

// Name of the .txt file used to cycle the maps on multiplayer servers 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "mapcycle.txt"
mapcyclefile "mapcycle.txt"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_aaquality "0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.0"
mat_ambient_light_b "0.0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.0"
mat_ambient_light_g "0.0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.0"
mat_ambient_light_r "0.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_antialias "0"

// Cutoff time (in ms) spent in ServiceAsyncTextureLoads
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.5"
mat_async_tex_maxtime_ms "0.5"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_bufferprimitives "1"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_bumpbasis "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_bumpmap "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_colcorrection_disableentities "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_colcorrection_editor "0"

// Flags: FCVAR_CHEAT
// Default: "1"
mat_colorcorrection "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_compressedtextures "1"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_debugalttab "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_debugdepth "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
mat_debugdepthmode "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "128.0f"
mat_debugdepthval "128.0f"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "256.0f"
mat_debugdepthvalmax "256.0f"

// Default brightness for lightmaps where none have been created in the level.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_defaultlightmap "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1.0"
mat_depth_blur_focal_distance_override "-1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1.0"
mat_depth_blur_strength_override "-1.0"

// Flags: FCVAR_CHEAT
// Default: "0.0f"
mat_depthbias_normal "0.0f"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
mat_depthfeather_enable "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_detail_tex "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_diffuse "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
mat_disable_fancy_blending "0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
mat_displacementmap "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "10"
mat_dof_max_blur_radius "10"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
mat_dof_quality "0"

// Enable title safe overlay
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_drawTitleSafe "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_draw_resolution "0"

// Flags: FCVAR_CHEAT
// Default: "3072"
mat_draw_resolution_threshold "3072"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_drawflat "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_drawgray "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_dxlevel "90"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_dynamicPaintmaps "0"

// Flags: FCVAR_CHEAT
// Default: "1"
mat_dynamic_tonemapping "1"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_dynamiclightmaps "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "128"
mat_envmapsize "128"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "32.0"
mat_envmaptgasize "32.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_exclude_async_update "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_excludetextures "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_fastnobump "0"

// Enable/Disable specularity for visual testing.  Will not reload materials and will not affect perf.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_fastspecular "1"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_fillrate "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_filterlightmaps "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_filtertextures "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.1"
mat_flashlight_shadow_decal_indirectcolour_amount "0.1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.2"
mat_flashlight_shadow_decal_max_alpha "0.2"

// Flags: FCVAR_CHEAT
// Default: "0.0"
mat_force_tonemap_scale "0.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
mat_force_vertexfog "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_forceaniso "1"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_forcedynamic "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_forcehardwaresync "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "1"
mat_forcemanagedtextureintohardware "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_fullbright "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1.0"
mat_grain_scale_override "-1.0"

// Set to 0 for no HDR, 1 for LDR+bloom on HDR maps, and 2 for full HDR on HDR maps.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
mat_hdr_level "2"

// Draw wireframe of: [0] nothing, [1] current leaf, [2] entire vis cluster, or [3] entire PVS (see mat_leafvis_draw_mask for what does/doesn't get drawn)
// Flags: FCVAR_CHEAT
// Default: "0"
mat_leafvis "0"

// A bitfield which affects leaf visibility debug rendering.  -1: show all, bit 0: render PVS-visible leafs, bit 1: render PVS- and frustum-visible leafs, bit 2: render frustum bounds, bit 3: render leaves out of PVS.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "3"
mat_leafvis_draw_mask "3"

// If set to 1, uses the last known leaf visibility data for visualization.  If set to 0, updates based on camera movement.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_leafvis_freeze "0"

// Updates leafvis debug render every frame (expensive)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_leafvis_update_every_frame "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_levelflush "1"

// Outputs .pfm files containing lightmap data for each lightmap page when a level exits.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
mat_lightmap_pfms "0"

// Flags: FCVAR_CHEAT
// Default: "1"
mat_loadtextures "1"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1000.0"
mat_local_contrast_edge_scale_override "-1000.0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1.0"
mat_local_contrast_midtone_mask_override "-1.0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.0"
mat_local_contrast_scale_override "0.0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1.0"
mat_local_contrast_vignette_end_override "-1.0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1.0"
mat_local_contrast_vignette_start_override "-1.0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_luxels "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "65536"
mat_max_worldmesh_vertices "65536"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_maxframelatency "1"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_measurefillrate "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_mipmaptextures "1"

// monitor gamma (typically 2.2 for CRT and 1.7 for LCD)
// Flags: FCVAR_ARCHIVE|FCVAR_ARCHIVE_XBOX
// Min: "1.6" Max: "2.6"
// Default: "2.2"
mat_monitorgamma "2.2"

// Flags: FCVAR_ARCHIVE|FCVAR_ARCHIVE_XBOX
// Default: "0"
mat_monitorgamma_tv_enabled "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Min: "1" Max: "4"
// Default: "2.5"
mat_monitorgamma_tv_exp "2.5"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "235"
mat_monitorgamma_tv_range_max "235"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "16"
mat_monitorgamma_tv_range_min "16"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_morphstats "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_motion_blur_enabled "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "4.0"
mat_motion_blur_percent_of_screen_max "4.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
mat_noise_enable "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_norendering "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_normalmaps "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_normals "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_paint_enabled "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_parallaxmap "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "50"
mat_parallaxmapsamplesmax "50"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "12"
mat_parallaxmapsamplesmin "12"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
mat_phong "1"

// 0 = disable, 1 = default, 2 = visualize phong component only (no diffuse)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
mat_phong_lightmappedgeneric "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Min: "-10" Max: "4"
// Default: "0"
mat_picmip "0"

// Power Savings Mode
// Flags: FCVAR_ARCHIVE
// Default: "0"
mat_powersavingsmode "0"

// Constantly print to screen the top N models as measured by total faces rendered this frame
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_print_top_model_vert_counts "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_processtoolvars "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_proxy "0"

// The queue/thread mode the material system should use: -1=default, 0=synchronous single thread, 1=queued single thread, 2=queued multithreaded
// Flags: FCVAR_RELEASE
// Default: "-1"
mat_queue_mode "-1"

// Whether QMS can be enabled on single threaded CPU
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_queue_mode_force_allow "0"

// Flags: FCVAR_RELEASE
// Default: "1"
mat_queue_priority "1"

// Report thread stalls.  Positive number will filter by stalls >= time in ms.  -1 reports all locks.
// Flags: FCVAR_ARCHIVE
// Default: "0"
mat_queue_report "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_reducefillrate "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_reduceparticles "0"

// Set to N to count how many faces each model draws each frame and spew the top N offenders from the last 150 frames (use 'mat_rendered_faces_spew' to spew all models rendered in the current frame)
// Flags: FCVAR_CHEAT
// Default: "0"
mat_rendered_faces_count "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
mat_report_queue_status "0"

// Enable depth resolve to a texture. 0=disable, 1=enable via resolve tricks if supported in hw, otherwise disable, 2=force extra depth only pass
// Flags: FCVAR_CHEAT
// Default: "1"
mat_resolveFullFrameDepth "1"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_reversedepth "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1.0"
mat_screen_blur_override "-1.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_shadowstate "1"

// Display the texture memory usage on the HUD.
// Flags: FCVAR_NEVER_AS_STRING|FCVAR_CHEAT
// Default: "0"
mat_show_texture_memory_usage "FCVAR_NEVER_AS_STRING"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_showenvmapmask "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_showlowresimage "0"

// color-code miplevels 2: normalmaps, 1: everything else
// Flags: FCVAR_CHEAT
// Default: "0"
mat_showmiplevels "0"

// Software AA - perform a software anti-aliasing post-process (an alternative/supplement to MSAA). This value sets the strength of the effect: (0.0 - off), (1.0 - full)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "-1.0"
mat_software_aa_strength "-1.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_softwarelighting "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_softwareskin "0"

// Enable/Disable specularity for perf testing.  Will cause a material reload upon change.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mat_specular "1"

// Flags: FCVAR_ARCHIVE
// Default: "0"
mat_spewalloc "0"

// 0 - do not support flashlight (don't load flashlight shader combos), 1 - flashlight is supported
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "-1"
mat_supportflashlight "-1"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_surfaceid "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_surfacemat "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_tessellation_accgeometrytangents "0"

// Flags: FCVAR_CHEAT
// Default: "1"
mat_tessellation_cornertangents "1"

// Flags: FCVAR_CHEAT
// Default: "1"
mat_tessellation_update_buffers "1"

// For debugging, show a list of used textures per frame
// Flags: FCVAR_CHEAT
// Default: "0"
mat_texture_list "0"

// If this is nonzero, then the texture list panel will show all currently-loaded textures.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_NEVER_AS_STRING
// Default: "0"
mat_texture_list_all "FCVAR_NEVER_AS_STRING"

// How many frames to sample texture memory for all textures.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
mat_texture_list_all_frames "2"

// The content path to the materialsrc directory. If left unset, it'll assume your content directory is next to the currently running game dir.
// Flags: FCVAR_ARCHIVE
// Default: ""
mat_texture_list_content_path ""

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_texture_list_exclude_editing "0"

// If this is nonzero, then the texture list panel will render thumbnails of currently-loaded textures.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_NEVER_AS_STRING
// Default: "1"
mat_texture_list_view "FCVAR_NEVER_AS_STRING"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_texture_tracking "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_tonemapping_occlusion_use_stencil "0"

// This means we want triple buffering if we are fullscreen and vsync'd
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_triplebuffered "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
mat_use_compressed_hdr_textures "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mat_verbose_texture_gen "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_REPLICATED|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
mat_vignette_enable "1"

// Force sync to vertical retrace
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "0" Max: "1"
// Default: "0"
mat_vsync "0"

// Flags: FCVAR_CHEAT
// Default: "0"
mat_wireframe "0"

// Dump current and max heap usage info to console at end of frame ( set to 2 for continuous output )
// 
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mem_dumpstats "0"

// Force cache flush of unlocked resources on every alloc
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mem_force_flush "0"

// Cache section to restrict mem_force_flush
// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
mem_force_flush_section ""

// Rate at which to attempt internal heap compation
// Flags: FCVAR_CHEAT
// Default: ".5"
mem_incremental_compact_rate ".5"

// Memory Level - Default: High
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
mem_level "2"

// Maximum amount of memory to dedicate to engine hunk and datacache (in mb)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "512"
mem_max_heapsize "512"

// Maximum amount of memory to dedicate to engine hunk and datacache, for dedicated server (in mb)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "64"
mem_max_heapsize_dedicated "64"

// Minimum amount of memory to dedicate to engine hunk and datacache (in mb)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "48"
mem_min_heapsize "48"

// Write periodic memstats dumps every n seconds.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mem_periodicdumps "0"

// Run heap check at end of every frame
// 
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mem_test_each_frame "0"

// Run heap check at a specified interval
// 
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mem_test_every_n_seconds "0"

// Don't print stats when memtesting
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mem_test_quiet "0"

// Metamod:Source Version
// Flags: FCVAR_SPONLY|FCVAR_NOTIFY
// Default: "1.10.7-dev"
metamod_version "1.10.7-devV"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
miniprofiler_dump "0"

// Metamod:Source Base Folder
// Flags: FCVAR_SPONLY
// Default: "addons\metamod"
mm_basedir "addons\metamod"

// When performing CSGO community matchmaking look for servers with at least so many human players
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "3"
mm_csgo_community_search_players_min "3"

// How many frames to delay before attempting to mount the xlsp patch.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "6"
mm_datacenter_delay_mount_frames "6"

// Delay after datacenter update is enabled before data is actually queried.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
mm_datacenter_query_delay "2"

// Data version to report to DC.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "5"
mm_datacenter_report_version "5"

// How many times can we retry retrieving each info chunk before failing.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "3"
mm_datacenter_retry_infochunks_attempts "3"

// Interval between datacenter stats retries.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "75"
mm_datacenter_retry_interval "75"

// Interval between datacenter stats updates.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "3600"
mm_datacenter_update_interval "3600"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mm_events_listeners_validation "0"

// Metamod:Source Plugins File
// Flags: FCVAR_SPONLY
// Default: "addons\metamod\metaplugins.ini"
mm_pluginsfile "addons\metamod\metaplugins.ini"

// How long to wait between pinging internet server details.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
mm_server_search_inet_ping_interval "1.0"

// How often to refresh a listed server.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "15"
mm_server_search_inet_ping_refresh "15"

// How long to wait for internet server details.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "3.0"
mm_server_search_inet_ping_timeout "3.0"

// How many servers can be pinged for server details in a batch.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "10"
mm_server_search_inet_ping_window "10"

// Duration of LAN discovery ping phase.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
mm_server_search_lan_ping_duration "1.0"

// Interval between LAN discovery pings.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.4"
mm_server_search_lan_ping_interval "0.4"

// Ports to scan during LAN games discovery. Also used to discover and correctly connect to dedicated LAN servers behind NATs.
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "27015,27016,27017,27018,27019,27020"
mm_server_search_lan_ports "27015,27016,27017,27018,27019,27020"

// How long until a server is no longer returned by the master till we remove it.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "180"
mm_server_search_server_lifetime "180"

// Interval between servers updates.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "60"
mm_server_search_update_interval "60"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mm_sv_load_test "0"

// This matchmaking query will override datacenter connectivity: -1 for local, 1 for dedicated
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mm_title_debug_dccheck "0"

// This matchmaking query will run with minimal set of parameters
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mm_title_debug_minquery "0"

// This matchmaking version will override .res file version for isolating matchmaking
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mm_title_debug_version "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Min: "0"
// Default: "8"
mod_WeaponViewModelCache "8"

// Flags: FCVAR_DEVELOPMENTONLY
// Min: "0"
// Default: "10"
mod_WeaponWorldModelCache "10"

// Flags: FCVAR_DEVELOPMENTONLY
// Min: "0"
// Default: "3000"
mod_WeaponWorldModelMinAge "3000"

// Check all vcollides on load
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_check_vcollide "0"

// For the dedicated server, supress loading model vertex data
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_dont_load_vertices "0"

// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_CHEAT|FCVAR_DONTRECORD
// Default: "0"
mod_dynamicloadpause "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM|FCVAR_DONTRECORD
// Default: "0"
mod_dynamicloadspew "0"

// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_CHEAT|FCVAR_DONTRECORD
// Default: "0"
mod_dynamicloadthrottle "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM|FCVAR_DONTRECORD
// Default: "1"
mod_dynamicunloadtex "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM|FCVAR_DONTRECORD
// Default: "150"
mod_dynamicunloadtime "150"

// Forces all model file data into cache on model load.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mod_forcedata "1"

// Forces all model file data into cache on model load.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mod_forcetouchdata "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_load_anims_async "0"

// Forces all ANI file loading to stall for specified ms
// 
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_load_fakestall "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_load_mesh_async "0"

// Indicates how far ahead in seconds to preload animations.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
mod_load_preload "1.0"

// 1 - show hitches , 2 - show stalls
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_load_showstall "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_load_vcollide_async "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mod_lock_mdls_on_load "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mod_lock_meshes_on_load "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_test_mesh_not_available "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_test_not_available "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_test_verts_not_available "0"

// Touch model data during level startup
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
mod_touchalldata "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
mod_trace_load "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2.0"
molotov_throw_detonate_time "2.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
morph_debug "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "7"
morph_path "7"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
mortar_visualize "0"

// The MOTD file to load.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "motd.txt"
motdfile "motd.txt"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
movie_volume_scale "1.0"

// amount of money awared to every player after each round
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_afterroundmoney "16000"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "1"
mp_allowNPCs "1"

// toggles whether the server allows spectator mode or not
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
mp_allowspectators "1.0"

// If set, everyone can pick up the c4, not just Ts.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_anyone_can_pickup_c4 "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "1"
mp_autocrosshair "1"

// Kick idle/team-killing/team-damaging players
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_autokick "1"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_RELEASE
// Default: "1"
mp_autoteambalance "1"

// Whether to automatically pause the match after restoring round data from backup
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
mp_backup_restore_load_autopause "1"

// If enabled will keep in-memory backups to handle reconnecting players even if the backup files aren't written to disk
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
mp_backup_round_auto "1"

// If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "backup"
mp_backup_round_file "backup"

// Every time a backup file is written the value of this convar gets updated to hold the name of the backup file.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_backup_round_file_last ""

// If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt'
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "%prefix%_round%round%.txt"
mp_backup_round_file_pattern "%prefix%_round%round%.txt"

// Sets the style of capture point blocking used. 0 = Blocks break captures completely. 1 = Blocks only pause captures.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
mp_blockstyle "1"

// Time after round win until round restarts
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Min: "5" Max: "15"
// Default: "15"
mp_bonusroundtime "15"

// Whether players can purchase grenades from the buy menu or not.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "1"
mp_buy_allow_grenades "1"

// Whether players can purchase guns: pistols (1), SMGs (2), rifles (4), shotguns (8), sniper rifles (16), heavy MGs (32).
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "255"
// Default: "255"
mp_buy_allow_guns "255"

// When set, players can buy anywhere, not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_buy_anywhere "0"

// When set, players can buy when immune, ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_buy_during_immunity "0"

// How many seconds after round start players can buy items for.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "90"
mp_buytime "60"

// If set, the planted c4 cannot be defused.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_c4_cannot_be_defused "0"

// how long from when the C4 is armed until it blows
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "10"
// Default: "40"
mp_c4timer "40"

// Time it takes for a full capture point to deteriorate.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "90.0"
mp_capdeteriorate_time "90.0"

// Sets the style of capture points used. 0 = Fixed players required to cap. 1 = More players cap faster, but longer cap times.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
mp_capstyle "1"

// Text that team leader from each team must speak for the match to begin
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "ready"
mp_clan_ready_signal "ready"

// If non-zero, game will restart once someone from each team gives the ready signal
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
mp_clan_readyrestart "0"

// After a competitive match finishes rematch voting extra time is given for rankings.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "15"
mp_competitive_endofmatch_extra_time "15"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "4"
mp_consecutive_loss_max "4"

// If set, real players will auto join CT on join.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_coop_force_join_ct "0"

// The difficulty offset modifier for bots during coop missions.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_coopmission_bot_difficulty_offset "0"

// Which mission the map should run after it loads.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_coopmission_mission_number "0"

// The default grenades that the CTs will spawn with.  To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_ct_default_grenades ""

// The default melee weapon that the CTs will spawn with.  Even if this is blank, a knife will be given.  To give a taser, it should look like this: 'weapon_knife weapon_taser'.  Remember to set mp_weapons_allow_zeus to 1 if you want to give a taser!
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "weapon_knife"
mp_ct_default_melee "weapon_knife"

// The default primary (rifle) weapon that the CTs will spawn with
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_ct_default_primary ""

// The default secondary (pistol) weapon that the CTs will spawn with
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "weapon_hkp2000"
mp_ct_default_secondary ""

// Determines whether non-headshot hits do any damage.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_damage_headshot_only "0"

// Scales the damage a CT player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1.0"
mp_damage_scale_ct_body "1.0"

// Scales the damage a CT player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).  REMEMBER! headshots do 4x the damage of the body before this scaler is applied.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1.0"
mp_damage_scale_ct_head "1.0"

// Scales the damage a T player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1.0"
mp_damage_scale_t_body "1.0"

// Scales the damage a T player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).  REMEMBER! headshots do 4x the damage of the body before this scaler is applied.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1.0"
mp_damage_scale_t_head "1.0"

// If Set to non-0, will determine the fraction of damage dealt that will be given to attacker.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_damage_vampiric_amount "0"

// Drop breachcharge on player death
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "1"
mp_death_drop_breachcharge "1"

// Whether c4 is droppable
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_death_drop_c4 "1"

// Drop defuser on player death
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "1"
mp_death_drop_defuser "1"

// Which grenade to drop on player death: 0=none, 1=best, 2=current or best, 3=all grenades
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "3"
// Default: "2"
mp_death_drop_grenade "2"

// Which gun to drop on player death: 0=none, 1=best, 2=current or best
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "2"
// Default: "1"
mp_death_drop_gun "1"

// Drop healthshot on player death
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "1"
mp_death_drop_healthshot "1"

// Drop taser on player death
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "1"
mp_death_drop_taser "1"

// Determines whether a player can early-out of the deathcam.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_deathcam_skippable "1"

// If the map doesn't define an objective (bomb, hostage, etc), the value of this convar will declare the winner when the time runs out in the round.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1"
mp_default_team_winner_no_objective "3"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
mp_defaultteam "0"

// How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "2"
// Default: "0"
mp_defuser_allocation "2"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "0"
mp_disable_respawn_times "0"

// When a bot disconnects, kill them first.  Requires mp_disconnect_kills_players.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
mp_disconnect_kills_bots "0"

// When a player disconnects, kill them first (triggering item drops, stats, etc.)
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
mp_disconnect_kills_players "1"

// Whether to display and score player assists
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "1"
mp_display_kill_assists "0"

// Maximum time the bonus time will last (in seconds)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "30"
mp_dm_bonus_length_max "30"

// Minimum time the bonus time will last (in seconds)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "30"
mp_dm_bonus_length_min "30"

// Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "50"
mp_dm_bonus_percent "50"

// When attempting to get the bonus weapon in deathmatch, whether we should respawn you with it or just give it to you directly
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_dm_bonus_respawn "0"

// Additional dogtags to drop when making a kill with the bonus weapon
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_dm_bonusweapon_dogtags "0"

// Points to award for picking up a dogtag in deathmatch.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "0"
mp_dm_dogtag_score "0"

// Number of base points to award for a kill in deathmatch.  Cheaper weapons award 1 or 2 additional points.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "10"
mp_dm_kill_base_score "10"

// In deathmatch, enables team DM visuals & scoring
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_dm_teammode "0"

// Team deathmatch victory points to award for kill with bonus weapon
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_dm_teammode_bonus_score "1"

// Team deathmatch victory points to award for collecting enemy dogtags
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_dm_teammode_dogtag_score "0"

// Team deathmatch victory points to award for enemy kill
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_dm_teammode_kill_score "1"

// Maximum time a bonus time will start after the round start or after the last bonus (in seconds)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "40"
mp_dm_time_between_bonus_max "40"

// Minimum time a bonus time will start after the round start or after the last bonus (in seconds)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "30"
mp_dm_time_between_bonus_min "30"

// Whether or not to do a warmup period at the start of a match in an offline (bot) match.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0"
mp_do_warmup_offine "0"

// Whether or not to do a warmup period at the start of a match.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "1"
mp_do_warmup_period "1"

// Whether dogtags should despawn when their killer dies
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_dogtag_despawn_on_killer_death "1"

// How many seconds dogtags should stay around before despawning automatically (0 = infinite)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "120"
mp_dogtag_despawn_time "120"

// Who is eligible to pick up a dogtag (0 = killer only, 1 = killer's team, 2 = victim's team, 3 = killer & victim's team, 4 = anyone)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_dogtag_pickup_rule "0"

// Allows players to drop grenades.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
mp_drop_grenade_enable "0"

// Allows players to drop knives.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
mp_drop_knife_enable "0"

// Reset all player money every N rounds (0 for never)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_economy_reset_rounds "0"

// Enable timers to wait between rounds.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
mp_enableroundwaittime "1"

// If mp_endmatch_votenextmap is set, players have this much time to vote on the next map at match end.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "20"
mp_endmatch_votenextleveltime "20"

// Whether or not players vote for the next map at the end of the match when the final scoreboard comes up
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_endmatch_votenextmap "1"

// If set, keeps the current map in the list of voting options.  If not set, the current map will not appear in the list of voting options.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_endmatch_votenextmap_keepcurrent "1"

// Modes available for endmatch voting during War Games. Separate names with spaces.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "armsrace demolition flyingscoutsman"
mp_endmatch_votenextmap_wargames_modes "armsrace demolition flyingscoutsman"

// Maximum number of maps to include in endmatch voting during War Games
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "3"
mp_endmatch_votenextmap_wargames_nummaps "3"

// Maximum number of other War Games to include in endmatch voting during War Games
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
mp_endmatch_votenextmap_wargames_nummodes "1"

// Number of players required to be connected to end warmup early. 0 to require maximum players for mode.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_endwarmup_player_count "0"

// Reset all player equipment every N rounds (0 for never)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_equipment_reset_rounds "0"

// After this amount of time of standing in place but aiming to one side, go ahead and move feet to face upper body.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2"
mp_facefronttime "2"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "0"
mp_falldamage "0"

// How many degrees per second that we can turn our feet or upper body.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "400"
mp_feetyawrate "400"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "0"
mp_flashlight "0"

// Scalar for first person view punch when getting hit.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "3"
mp_flinch_punch_scale "3"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "1"
mp_footsteps "1"

// Makes the server always play footstep sounds. Clients never calculate footstep sounds locally, instead relying on the server.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
mp_footsteps_serverside "1"

// Players don't get to choose what team they are on, it is auto assinged.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0"
mp_force_assign_teams "0"

// The amount of time a player has on the team screen to make a selection before being auto-teamed
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "15"
mp_force_pick_time "15"

// Restricts spectator modes for dead players. 0 = Any team. 1 = Only own team. 2 = No one; fade to black on death (previously mp_fadetoblack).
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_forcecamera "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "1"
mp_forcerespawn "1"

// The number of kills at which the map ends
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "0"
mp_fraglimit "0"

// Determines whether kevlar (1+) and/or helmet (2+) are given automatically.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_free_armor "1"

// how many seconds to keep players frozen when the round starts
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "60"
// Default: "6"
mp_freezetime "4"

// Allows team members to injure other members of their team
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_friendlyfire "0"

// If mp_ggprogressive_use_random_weapons is set, this is the number of kills needed with each weapon
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2"
mp_ggprogressive_random_weapon_kills_needed "2"

// Number of seconds to delay before restarting a round after a win in gungame progessive
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "90"
// Default: "15.0"
mp_ggprogressive_round_restart_delay "15"

// If set, selects random weapons from set categories for the progression order
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_ggprogressive_use_random_weapons "1"

// Award this many upgrade points every round in demolition mode
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_ggtr_always_upgrade "0"

// Number of bonus upgrades to award the CTs when they defuse a gun game bomb
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "1" Max: "10"
// Default: "1"
mp_ggtr_bomb_defuse_bonus "1"

// Number of bonus upgrades to award the Ts when they detonate a gun game bomb
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "1" Max: "10"
// Default: "1"
mp_ggtr_bomb_detonation_bonus "1"

// Kill points required in a round to get a bonus flash grenade
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "1" Max: "5"
// Default: "4"
mp_ggtr_bomb_pts_for_flash "4"

// Kill points required in a round to get a bonus HE grenade
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "1" Max: "5"
// Default: "3"
mp_ggtr_bomb_pts_for_he "3"

// Kill points required in a round to get a bonus molotov cocktail
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "1" Max: "5"
// Default: "5"
mp_ggtr_bomb_pts_for_molotov "5"

// Kill points required to upgrade a player's weapon
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "1" Max: "10"
// Default: "2.0"
mp_ggtr_bomb_pts_for_upgrade "2"

// Number of seconds to delay before making the bomb available to a respawner in gun game
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "30"
// Default: "0.0"
mp_ggtr_bomb_respawn_delay "0"

// Number of bonus points awarded in Demolition Mode when knife kill ends round
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "10"
// Default: "1"
mp_ggtr_end_round_kill_bonus "1"

// Number of seconds to delay during TR Mode halftime
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "30"
// Default: "0.0"
mp_ggtr_halftime_delay "0.0"

// End the half and give a team round point when a player makes a kill using the final weapon
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0"
mp_ggtr_last_weapon_kill_ends_half "0"

// Upgrade the player's weapon after this number of rounds without upgrading
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3"
mp_ggtr_num_rounds_autoprogress "3"

// Whether this map should spawn a c4 bomb for a player or not.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "1"
mp_give_player_c4 "1"

// If above 0, deal non-lethal damage to players over time.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "0.0"
mp_global_damage_per_second "0.0"

// The amount of money bots get time each wave the players complete.  This # is absolute and not additive, the money is set to (this)x(wave#) for each bot on each wave.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "800"
mp_guardian_bot_money_per_wave "800"

// (If set) kill condition token (#quest_hud_guardian_adjective_<name>)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_guardian_loc_adjective ""

// (If set) kill condition token (#quest_hud_guardian_condition_<name>)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_guardian_loc_condition ""

// (If set) icon to override for guardian mission
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_guardian_loc_icon ""

// Token to use to generate guardian mission (#quest_hud_guardian_mission_<name>)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "default"
mp_guardian_loc_mission "default"

// Token to use to display guardian mission (#quest_hud_guardian_override_<name>) (if exists)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_guardian_loc_override ""

// (If set) weapon name token (#SFUI_WPNHUD_<name>)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_guardian_loc_weapon ""

// The maximum distance a player is allowed to get from the bombsite before they're killed.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2000"
mp_guardian_player_dist_max "2000"

// The distance at which we start to warn a player when they are too far from the guarded bombsite.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1300"
mp_guardian_player_dist_min "1300"

// The number of kills needed with a specific weapon.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10"
mp_guardian_special_kills_needed "10"

// The weapon that needs to be used to increment the kills needed to complete the mission.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "awp"
mp_guardian_special_weapon_needed "awp"

// If set to the index of a bombsite, will cause random spawns to be only created near that site.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "-1"
mp_guardian_target_site "-1"

// Determines whether the match switches sides in a halftime event.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_halftime "0"

// Number of seconds that halftime lasts
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "300"
// Default: "15.0"
mp_halftime_duration "15.0"

// Set to 1 to pause match after halftime countdown elapses. Match must be resumed by vote or admin.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_halftime_pausematch "0"

// Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_halftime_pausetimer "0"

// How much EXTRA aim punch will happen when a player wearing the assault suit gets when shot
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1.0"
mp_heavyassaultsuit_aimpunch "1.0"

// Determines cooldown of purchase.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "5"
mp_heavyassaultsuit_cooldown "5"

// How fast a player wearing the heavy assault suit will draw their weapon (1.0 = normal speed, 0.5 = half speed)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.8"
mp_heavyassaultsuit_deploy_timescale "0.8"

// The max speed of a player when they are wearing the heavy assault suit
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "130"
mp_heavyassaultsuit_speed "130"

// How much damage should scale when the player wearing the heavy assault suit is shot (1.0 = no change, 0.5 = half damage)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1.0"
mp_heavybot_damage_reduction_scale "1.0"

// Terrorist are kicked for killing too much hostages
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "10"
mp_hostagepenalty "10"

// Maximum number of hostages to spawn.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2"
mp_hostages_max "2"

// Additional time added to round time if a hostage is reached by a CT.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_hostages_rescuetime "1"

// 0 == all alive, any other number is the number the CT's need to rescue to win the round.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
mp_hostages_rescuetowin "1"

// Default is 1.0, slow down hostages by setting this to < 1.0.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0.1" Max: "1.5"
// Default: "1.0"
mp_hostages_run_speed_modifier "1.0"

// When enabled will consistently force the farthest hostages to spawn.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_hostages_spawn_farthest "0"

// Comma separated list of zero based indices to force spawn positions, e.g. '0,2' or '1,6'
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_hostages_spawn_force_positions ""

// 0 = spawn hostages randomly every round, 1 = same spawns for entire match.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_hostages_spawn_same_every_round "1"

// Whether or not hostages can be hurt.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_hostages_takedamage "0"

// Restricts human players to a single team {any, CT, T}
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "any"
mp_humanteam "any"

// Ignore conditions which would end the current round
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_ignore_round_win_conditions "0"

// Use IK on in-place turns.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
mp_ik "1"

// Set this convar to a comma-delimited list of definition indices of weapons that should be prohibited from use.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_items_prohibited ""

// Number of seconds after round start to allow a player to join a game
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "30"
// Default: "0.0"
mp_join_grace_time "0.0"

// Max # of players 1 team can have over another (0 disables check)
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "30"
// Default: "2"
mp_limitteams "2"

// Logs attacks.  Values are: 0=off, 1=enemy, 2=teammate, 3=both)
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0" Max: "3"
// Default: "0"
mp_logdetail "0"

// Logs a line any time a player acquires or loses an item.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
mp_logdetail_items "0"

// Enables distance logging every so many units
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "250"
mp_logdistance_2d "250"

// Enables distance logging every so many seconds
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "15"
mp_logdistance_sec "15"

// Enables distance logging with full loadouts
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
mp_logloadouts "1"

// Enables money logging.  Values are: 0=off, 1=on
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0"
mp_logmoney "0"

// Can a team clinch and end the match by being so far ahead that the other team has no way to catching up?
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_match_can_clinch "1"

// At the end of the match, perform a changelevel even if next map is the same
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0"
mp_match_end_changelevel "0"

// At the end of the match, perform a restart instead of loading a new map
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0"
mp_match_end_restart "0"

// Time (in seconds) until a match restarts.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "1" Max: "9999"
// Default: "15"
mp_match_restart_delay "15"

// Determines the highest level of armor allowed to be purchased. (0) None, (1) Kevlar, (2) Helmet
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2"
mp_max_armor "2"

// maximum amount of money allowed in a player's account
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "16000"
mp_maxmoney "16000"

// max number of rounds to play before server changes maps
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "0"
mp_maxrounds "0"

// Number of seconds to delay before the molotov can be used after acquiring it
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "30"
// Default: "15.0"
mp_molotovusedelay "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_only_cts_rescue_hostages "1"

// If a match ends in a tie, use overtime rules to determine winner
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_overtime_enable "0"

// If set to 1 will set mp_halftime_pausetimer to 1 before every half of overtime. Set mp_halftime_pausetimer to 0 to resume the timer.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_overtime_halftime_pausetimer "0"

// When overtime is enabled play additional rounds to determine winner
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "6"
mp_overtime_maxrounds "6"

// Money assigned to all players at start of every overtime half
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10000"
mp_overtime_startmoney "10000"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_plant_c4_anywhere "0"

// When a player has buffer health, this is how fast it ticks down.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
mp_player_healthbuffer_decay_rate "0"

// Players can earn money by performing in-game actions
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_playercashawards "0"

// Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "2"
// Default: "0"
mp_playerid "0"

// Number of seconds to delay showing information in the status bar
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0.4"
mp_playerid_delay "0.4"

// Number of seconds to keep showing old information in the status bar
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0.2"
mp_playerid_hold "0.2"

// Determines who should see all. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "3"
// Default: "0"
mp_radar_showall "0"

// Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_randomspawn "0"

// If using mp_randomspawn, determines whether to test distance when selecting this spot.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_randomspawn_dist "0"

// If using mp_randomspawn, determines whether to test Line of Sight when spawning.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_randomspawn_los "0"

// Whether guns must be +used to acquire or default is touch-to-pickup
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0"
mp_require_gun_use_to_acquire "0"

// How many seconds after respawn immunity lasts.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "4.0"
mp_respawn_immunitytime "0"

// When set to 1, counter-terrorists will respawn after dying.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_respawn_on_death_ct "0"

// When set to 1, terrorists will respawn after dying.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_respawn_on_death_t "0"

// Time between respawn waves.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "10.0"
mp_respawnwavetime "10.0"

// Time between respawn waves for CTs.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10.0"
mp_respawnwavetime_ct "10.0"

// Time between respawn waves for Terrorists.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10.0"
mp_respawnwavetime_t "10.0"

// If non-zero, game will restart in the specified number of seconds
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
mp_restartgame "0"

// If non-zero, the current round will restart in the specified number of seconds
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
mp_restartround "0"

// Number of seconds to delay before restarting a round after a win
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "14"
// Default: "7.0"
mp_round_restart_delay "10"

// How many minutes each round takes.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "1" Max: "60"
// Default: "5"
mp_roundtime "3"

// How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "60"
// Default: "0"
mp_roundtime_defuse "3"

// How many minutes deployment for coop mission takes.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "1" Max: "15"
// Default: "5"
mp_roundtime_deployment "5"

// How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "60"
// Default: "0"
mp_roundtime_hostage "2"

// Show entities that are removed on round respawn.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
mp_showcleanedupents "0"

// Show gamestate round transitions.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
mp_showroundtransitions "0"

// How solid are teammates: 0 = transparent; 1 = fully solid; 2 = can stand on top of heads
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_solid_teammates "0"

// Kick players who team-kill within this many seconds of a round restart.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "5"
mp_spawnprotectiontime "5"

// Toggle set the player names and team names to the opposite side in which they are are on the spectator panel.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0"
mp_spec_swapplayersides "0"

// How many spectators are allowed in a match.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "2"
mp_spectators_max "2"

// Allow the match to end when mp_timelimit hits instead of waiting for the end of the current round.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "0"
mp_stalemate_at_timelimit "0"

// Enable/Disable stalemate mode.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "0"
mp_stalemate_enable "0"

// Timelimit (in seconds) of the stalemate round.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "240"
mp_stalemate_timelimit "240"

// Determines what the initial loss streak is.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "0"
mp_starting_losses "0"

// amount of money each player gets when they reset
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "800"
mp_startmoney "16000"

// Specifies number of seconds required to wait before another suicide.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "5"
mp_suicide_time "5"

// The default grenades that the Ts will spawn with.  To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_t_default_grenades ""

// The default melee weapon that the Ts will spawn with
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "weapon_knife"
mp_t_default_melee "weapon_knife"

// The default primary (rifle) weapon that the Ts will spawn with
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
mp_t_default_primary ""

// The default secondary (pistol) weapon that the Ts will spawn with
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "weapon_glock"
mp_t_default_secondary ""

// Scalar for player tagging modifier when hit. Lower values for greater tagging.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1.0"
mp_tagging_scale "1.0"

// Determines recharge time for taser. -1 = disabled.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1"
mp_taser_recharge_time "-1"

// The damage threshhold players have to exceed in a match to get kicked.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "300"
mp_td_dmgtokick "300"

// The damage threshhold players have to exceed in a match to get warned that they are about to be kicked.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "200"
mp_td_dmgtowarn "200"

// The damage threshold players have to exceed at the start of the round to be warned/kick.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "50"
mp_td_spawndmgthreshold "50"

// Number of timeouts each team gets per match.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_team_timeout_max "1"

// Duration of each timeout.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "60"
mp_team_timeout_time "60"

// Teams can earn money by performing in-game actions
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_teamcashawards "1"

// Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teamflag_1 ""

// Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teamflag_2 ""

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "hgrunt;scientist"
mp_teamlist "hgrunt;scientist"

// Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teamlogo_1 ""

// Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teamlogo_2 ""

// A non-empty string sets first team's match stat.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teammatchstat_1 ""

// A non-empty string sets second team's match stat.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teammatchstat_2 ""

// Cycle match stats after so many seconds
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "45"
mp_teammatchstat_cycletime "45"

// Decide on a match stat and hold it additionally for at least so many seconds
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "5"
mp_teammatchstat_holdtime "5"

// A non-empty string sets the match stat description, e.g. 'Match 2 of 3'.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teammatchstat_txt ""

// When set, your teammates act as enemies and all players are valid targets.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_teammates_are_enemies "0"

// A non-empty string overrides the first team's name.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teamname_1 ""

// A non-empty string overrides the second team's name.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teamname_2 ""

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
mp_teamoverride "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "0"
mp_teamplay "0"

// A value between 1 and 99 will show predictions in favor of CT team.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
mp_teamprediction_pct "0"

// A value between 1 and 99 will set predictions in favor of first team.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "#SFUIHUD_Spectate_Predictions"
mp_teamprediction_txt "#SFUIHUD_Spectate_Predictions"

// Teams are unbalanced when one team has this many more players than the other team. (0 disables check)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Min: "0" Max: "30"
// Default: "1"
mp_teams_unbalance_limit "1"

// A non-empty string for best-of-N maps won by the first team.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teamscore_1 ""

// A non-empty string for best-of-N maps won by the second team.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
mp_teamscore_2 ""

// How many maps to win the series (bo3 max=2; bo5 max=3; bo7 max=4)
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0" Max: "7"
// Default: "0"
mp_teamscore_max "0"

// game time per map in minutes
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "5"
mp_timelimit "20"

// Will TK'ers and team damagers be punished in the next round?  {0=no,  1=yes}
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_tkpunish "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "0"
mp_tournament "0"

// Specifies the item whitelist file to use.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "item_whitelist.txt"
mp_tournament_whitelist "item_whitelist.txt"

// When set to 1, and that player's team is set to respawn, they will respawn in waves. If set to 2, teams will respawn when the whole team is dead.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_use_respawn_waves "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
mp_verbose_changelevel_spew "1"

// Set to 1 to end the WaitingForPlayers period.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
mp_waitingforplayers_cancel "0"

// Set to 1 to start or restart the WaitingForPlayers period.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
mp_waitingforplayers_restart "0"

// WaitingForPlayers time length in seconds
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
mp_waitingforplayers_time "0"

// Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_warmup_pausetimer "0"

// How long the warmup period lasts. Changing this value resets warmup.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "5"
// Default: "30"
mp_warmuptime "5"

// Warmup time to use when all players have connected. 0 to disable.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_warmuptime_all_players_connected "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "5.0"
mp_weapon_melee_touch_time_after_hit "5.0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "1.3"
mp_weapon_next_owner_touch_time "1.3"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "1.5"
mp_weapon_prev_owner_touch_time "1.5"

// If Set to non-0, will hurt the attacker by the specified fraction of max damage if they miss.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_weapon_self_inflict_amount "0"

// Determines which team, if any, can purchase Heavy guns. -1 = any; 0 = non; 2 = Ts; 3 = CTs.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1"
mp_weapons_allow_heavy "-1"

// Determines whether heavyassaultsuit is permitted.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_weapons_allow_heavyassaultsuit "0"

// If this convar is set, when a match starts, the game will not delete weapons placed in the map.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_weapons_allow_map_placed "1"

// Determines which team, if any, can purchase Pistols. -1 = any; 0 = non; 2 = Ts; 3 = CTs.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1"
mp_weapons_allow_pistols "-1"

// Determines which team, if any, can purchase Rifles. -1 = any; 0 = non; 2 = Ts; 3 = CTs.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1"
mp_weapons_allow_rifles "-1"

// Determines which team, if any, can purchase SMGs. -1 = any; 0 = non; 2 = Ts; 3 = CTs.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1"
mp_weapons_allow_smgs "-1"

// Determines how many purchases of each weapon type allowed per player per round (0 to disallow purchasing, -1 to have no limit).
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "5"
mp_weapons_allow_typecount "2"

// Determines how many Zeus purchases a player can make per round (0 to disallow, -1 to have no limit).
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
mp_weapons_allow_zeus "1"

// If this convar is set, weapons on the ground will have a glow around them.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
mp_weapons_glow_on_ground "0"

// Max number of times a player may purchase any weapon per match
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "-1" Max: "1"
// Default: "-1"
mp_weapons_max_gun_purchases_per_weapon_per_match "-1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY
// Default: "0"
mp_weaponstay "0"

// The amount of time to show the win panel between matches / halfs
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3"
mp_win_panel_display_time "0"

// Max score one team can reach before server changes maps
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Min: "0"
// Default: "0"
mp_winlimit "0"

// Current user name
// Flags: FCVAR_ARCHIVE|FCVAR_USERINFO|FCVAR_PRINTABLEONLY|FCVAR_SS|FCVAR_SERVER_CAN_EXECUTE
// Default: "unnamed"
name "unnamed"

// RGBA color to draw as the background color for nav areas while editing.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0 0 0 30"
nav_area_bgcolor "0 0 0 30"

// Max area size created in nav generation
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "50"
nav_area_max_size "50"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.99"
nav_coplanar_slope_limit "0.99"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.7"
nav_coplanar_slope_limit_displacement "0.7"

// radius used to raise/lower corners in nearby areas when raising/lowering corners.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "18"
nav_corner_adjust_adjacent "18"

// Anchor nav_begin_area Z to editing player's feet
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_create_area_at_feet "0"

// If true, nav areas will be placed flush with the ground when created by hand.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_create_place_on_ground "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_debug_blocked "0"

// Checks for nodes embedded in displacements (useful for in-development maps)
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "10000"
nav_displacement_test "10000"

// The offset of the nav drag volume top from center
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "32"
nav_drag_selection_volume_zmax_offset "32"

// The offset of the nav drag volume bottom from center
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "32"
nav_drag_selection_volume_zmin_offset "32"

// The maximum number of areas to draw in edit mode
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "500"
nav_draw_limit "500"

// Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_edit "0"

// Autogenerate nav areas on fence and obstacle tops
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
nav_generate_fencetops "1"

// Convert obsolete jump areas into 2-way connections
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
nav_generate_fixup_jump_areas "1"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "2000"
nav_generate_incremental_range "2000"

// Z tolerance for adding new nav areas.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_generate_incremental_tolerance "0"

// Maximum range for precomputed nav mesh visibility (0 = default 1500 units)
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_max_view_distance "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "64"
nav_max_vis_delta_list_length "64"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.98"
nav_potentially_visible_dot_tolerance "0.98"

// Set to one to skip the time consuming phases of the analysis.  Useful for data collection and testing.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_quicksave "0"

// When nav nav_restart_after_analysis finishes, restart the server.  Turning this off can cause crashes, but is useful for incremental generation.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
nav_restart_after_analysis "1"

// Color used to draw the selected set borders while editing.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "100 100 0 255"
nav_selected_set_border_color "100 100 0 255"

// Color used to draw the selected set background while editing.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "255 255 200 96"
nav_selected_set_color "255 255 200 96"

// Show Approach Points in the Navigation Mesh.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_approach_points "0"

// Duration in seconds to show nav area ID and attributes while editing
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.5"
nav_show_area_info "0.5"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_compass "0"

// Highlight non-contiguous connections
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_continguous "0"

// Show current 'danger' levels.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_danger "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_light_intensity "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_node_grid "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_node_id "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_nodes "0"

// Show current player counts in each area.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_player_counts "0"

// Show areas that are potentially visible from the current nav area
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_show_potentially_visible "0"

// The ground unit normal's Z component must be greater than this for nav areas to be generated.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.7"
nav_slope_limit "0.7"

// The ground unit normal's Z component must be this close to the nav area's Z component to be generated.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.1"
nav_slope_tolerance "0.1"

// Snap to the nav generation grid when creating new nav areas
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_snap_to_grid "0"

// Make props solid to nav generation/editing
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_solid_props "0"

// If true, nav areas will be placed flush with the ground when split.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_split_place_on_ground "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_test_node "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_test_node_crouch "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "4"
nav_test_node_crouch_dir "4"

// If nonzero editing the mesh will incrementally recompue visibility
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
nav_update_visibility_on_edit "0"

// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1"
net_allow_multicast "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
net_allow_syslink "1"

// Discards incoming message: <0|1|name>
// Flags: FCVAR_CHEAT
// Default: "0"
net_blockmsg "0"

// Apply bandwidth choke to loopback packets
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_chokeloop "0"

// Use lz compression on game packets.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
net_compresspackets "1"

// Don't bother compressing packets below this size.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1000"
net_compresspackets_minsize "1000"

// Attempt to compress out of band voice payloads (360 only).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_compressvoice "0"

// Draw completion slider during signon
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_drawslider "0"

// If enabled, channel will drop client when sending too much data causes buffer overrun
// Flags: FCVAR_RELEASE
// Default: "0"
net_droponsendoverflow "0"

// Drops next n packets on client
// Flags: FCVAR_CHEAT
// Default: "0"
net_droppackets "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_dumptest "0"

// Flags: FCVAR_CHEAT
// Default: "0"
net_earliertempents "0"

// Jitter fakelag packet time
// Flags: FCVAR_CHEAT
// Default: "0"
net_fakejitter "0"

// Lag all incoming network data (including loopback) by this many milliseconds.
// Flags: FCVAR_CHEAT
// Default: "0"
net_fakelag "0"

// Simulate packet loss as a percentage (negative means drop 1/n packets)
// Flags: FCVAR_CHEAT
// Default: "0"
net_fakeloss "0"

// Max # of seconds we can wait for next packets to be sent based on rate setting (0 == no limit).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "4.0"
net_maxcleartime "4.0"

// Maximum allowed file size for uploading in MB
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "0" Max: "64"
// Default: "16"
net_maxfilesize "16"

// Max fragment bytes per packet
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "256" Max: "1200"
// Default: "1200"
net_maxfragments "1200"

// Requested max packet size before packets are 'split'.
// Flags: FCVAR_ARCHIVE|FCVAR_USERINFO
// Min: "576" Max: "1200"
// Default: "1200"
net_maxroutable "1200"

// Forces larger payloads.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "16"
net_minroutable "16"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
net_paranoid "1"

// For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: ("x.x.x.x" )
// Flags: FCVAR_RELEASE
// Default: ""
net_public_adr ""

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_ACCESSIBLE_FROM_THREADS
// Default: "0"
net_queue_trace "0"

// Show dropped packets in console
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_showdrop "0"

// Show listening addition/removals
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_showeventlisteners "0"

// Dump game events to console (1=client only, 2=all).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_showevents "0"

// Show netchannel fragments
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_showfragments "0"

// Show incoming message: <0|1|name>
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_showmsg "0"

// Show messages for large packets only: <size>
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_showpeaks "0"

// Flags: FCVAR_CHEAT
// Default: "0"
net_showreliablesounds "0"

// Show info about packet splits
// Flags: FCVAR_RELEASE
// Default: "0"
net_showsplits "0"

// Dump TCP stream summary to console
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_showtcp "0"

// Dump UDP packets summary to console
// Flags: FCVAR_RELEASE
// Default: "0"
net_showudp "0"

// Dump OOB UDP packets summary to console
// Flags: FCVAR_RELEASE
// Default: "0"
net_showudp_oob "0"

// Dump non-loopback udp only
// Flags: FCVAR_RELEASE
// Default: "0"
net_showudp_remoteonly "0"

// Number of fragments for a splitpacket that can be sent per frame
// Flags: FCVAR_RELEASE
// Default: "1"
net_splitrate "1"

// Allow steam connections to attempt to use relay servers as fallback (best if specified on command line:  +net_steamcnx_allowrelay 1)
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1"
net_steamcnx_allowrelay "1"

// Show debug spew for steam based connections, 2 shows all network traffic for steam sockets.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_steamcnx_debug "0"

// Use steam connections on listen server as a fallback, 2 forces use of steam connections instead of raw UDP.
// Flags: FCVAR_RELEASE
// Default: "1"
net_steamcnx_enabled "1"

// Max number of packets per burst beyond which threaded socket pump algorithm will start dropping packets.
// Flags: FCVAR_RELEASE
// Default: "1024"
net_threaded_socket_burst_cap "1024"

// Number of packets per second that threaded socket pump algorithm allows from client.
// Flags: FCVAR_RELEASE
// Default: "6400"
net_threaded_socket_recovery_rate "6400"

// Number of seconds over which the threaded socket pump algorithm will fully recover client ratelimit.
// Flags: FCVAR_RELEASE
// Default: "60"
net_threaded_socket_recovery_time "60"

// Use network sockets layer even for listen server local player's packets (multiplayer only).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
net_usesocketsforloopback "0"

// Set to 1 to advance to next frame ( when singlestep == 1 )
// Flags: FCVAR_CHEAT
// Default: "0"
next "0"

// If set to a valid map name, will trigger a changelevel to the specified map at the end of the round
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
nextlevel ""

// When enabled prints next map to clients
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
nextmap_print_enabled "0"

// Sets the game mode to be played when the next level loads
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
nextmode ""

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
noclip_fixup "1"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
npc_ally_deathmessage "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: ""
npc_create_equipment ""

// Set whether should run on NPC go
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
npc_go_do_run "1"

// Enable test mode for ik height adjustment
// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "1"
npc_height_adjust "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
npc_sentences "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
npc_vphysics "0"

// Flags: FCVAR_RELEASE
// Default: "0"
occlusion_old "0"

// Enable asynchronous occlusion test in another thread; may save some server tick time at the cost of synchronization overhead with the async occlusion query thread
// Flags: FCVAR_RELEASE
// Default: "0"
occlusion_test_async "1"

// Flags: FCVAR_CHEAT
// Default: "2"
occlusion_test_async_jitter "2"

// Flags: FCVAR_CHEAT
// Default: "8.25"
occlusion_test_async_move_tolerance "8.25"

// Amount by which the camera (viewer's eye) is expanded for occlusion test. This should be large enough to accommodate eye's movement within a frame or two
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "12"
occlusion_test_camera_margins "12"

// Amount by which the player bounding box is expanded up for occlusion test to account for jumping. This margin should be large enough to accommodate player movement within a frame or two. Affects both camera box and player box.
// Flags: FCVAR_RELEASE
// Default: "12"
occlusion_test_jump_margin "12"

// Amount by which the player bounding box is expanded for occlusion test. This margin should be large enough to accommodate player movement within a frame or two, and the longest weapon they might hold. Shadow does not take this into account.
// Flags: FCVAR_RELEASE
// Default: "36"
occlusion_test_margins "36"

// Max length of completely occluded shadow to consider a player for occlusion test. If shadow provably stops at this distance, the player may be considered for occlusion test. For longer shadows, we just don't do occlusion because we are not likely to find full occlusion when one of the boxes is expanded too much.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "144"
occlusion_test_shadow_length "144"

// Max distance at which to consider shadows for occlusion computations
// Flags: FCVAR_RELEASE
// Default: "1500"
occlusion_test_shadow_max_distance "1500"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0.0"
old_radiusdamage "0.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_REPLICATED
// Default: "1"
paint_alpha_offset_enabled "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_REPLICATED
// Default: "0.7f"
paint_max_surface_border_alpha "0.7f"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_REPLICATED
// Default: "0.7f"
paint_min_valid_alpha_value "0.7f"

// Change bias value for computing circle buffer
// Flags: FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0.1f"
paintsplat_bias "0.1f"

// Max noise value of circle alpha
// Flags: FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0.1f"
paintsplat_max_alpha_noise "0.1f"

// Flags: FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1"
paintsplat_noise_enabled "1"

// Test vgui panel positioning with title safe indentation
// Flags: FCVAR_CHEAT
// Default: "0"
panel_test_title_safe "0"

// Attachment index for attachment mode
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
particle_test_attach_attachment "0"

// Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "follow_attachment"
particle_test_attach_mode "follow_attachment"

// Name of the particle system to dynamically spawn
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: ""
particle_test_file ""

// Current server access password
// Flags: FCVAR_ARCHIVE|FCVAR_DONTRECORD|FCVAR_SERVER_CANNOT_QUERY
// Default: ""
password ""

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
pc_fake_controller "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
phys_debug_check_contacts "0"

// enable PIX counters
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "1"
phys_enable_PIX_counters "1"

// enable some experimental SIMD/VMX128 optimizations in physics and collision
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
phys_enable_experimental_optimizations "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
phys_enable_query_cache "1"

// enable some additional SIMD/VMX128 optimizations in physics and collision
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
phys_enable_simd_optimizations "1"

// Modifier for the headshot impulse hits on players
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.3"
phys_headshotscale "1.3"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1.0"
phys_impactforcescale "1.0"

// Controls the duration of vphysics penetration error boxes.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "10"
phys_penetration_error_time "10"

// This multiplies the bullet impact impuse on players for more dramatic results when players are shot.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "10.0"
phys_playerscale "10.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
phys_pushscale "1"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
phys_show_active "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
phys_speeds "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "5.0"
phys_stressbodyweights "5.0"

// Scale time for physics
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
phys_timescale "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.375"
phys_upimpactforcescale "0.375"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
physicsshadowupdate_render "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
pipeline_static_props "1"

// When true, print amount and type of all damage received by player to console.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
player_debug_print_damage "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
player_old_armor "0"

// This determines how long the third person player character will crouch for after landing a jump.  This only affects the third person animation visuals.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0.2f"
post_jump_crouch "0.2f"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "64"
prop_active_gib_limit "64"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "12"
prop_active_gib_max_fade_time "12"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
prop_break_disable_float "0"

// Maximum prop breakable piece count (-1 = model default)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "-1"
props_break_max_pieces "-1"

// Maximum prop breakable piece count per frame (-1 = model default)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "-1"
props_break_max_pieces_perframe "-1"

// Min distance to player at which PVS is used. At closer distances, PVS assumes we can see a shadow or something else from the player, so it's safer to just always be "Visible"
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1500"
pvs_min_player_distance "1500"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1.0"
r_AirboatViewDampenDamp "1.0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "7.0"
r_AirboatViewDampenFreq "7.0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0.0"
r_AirboatViewZHeight "0.0"

// Flags: FCVAR_CHEAT
// Default: "1"
r_ClipAreaFrustums "1"

// Flags: FCVAR_CHEAT
// Default: "1"
r_ClipAreaPortals "1"

// Flags: FCVAR_CHEAT
// Default: "0"
r_DispBuildable "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_DispWalkable "0"

// 0=Off, 1=Normal, 2=Wireframe
// Flags: FCVAR_CHEAT
// Default: "1"
r_DrawBeams "1"

// Toggles rendering of displacment maps
// Flags: FCVAR_CHEAT
// Default: "1"
r_DrawDisp "1"

// Flags: FCVAR_CHEAT
// Default: "0"
r_DrawModelLightOrigin "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_DrawPortals "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "-1"
r_DrawSpecificStaticProp "-1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_ForceRestore "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "90"
r_JeepFOV "90"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1.0"
r_JeepViewDampenDamp "1.0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "7.0"
r_JeepViewDampenFreq "7.0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "10.0"
r_JeepViewZHeight "10.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_ShowViewerArea "0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1"
r_VehicleViewDampen "1"

// Set to boost ambient term if it is totally swamped by local lights
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_ambientboost "1"

// Boost ambient cube by no more than this factor
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "5"
r_ambientfactor "5"

// Fraction of direct lighting used to boost lighting when model requests
// Flags: FCVAR_CHEAT
// Default: "0.2"
r_ambientfraction "0.2"

// Set this to 1 to light models with only ambient lighting (and no static lighting).
// Flags: FCVAR_CHEAT
// Default: "0"
r_ambientlightingonly "0"

// Threshold above which ambient cube will not boost (i.e. it's already sufficiently bright
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.3"
r_ambientmin "0.3"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_aspectratio "0"

// Flags: FCVAR_CHEAT
// Default: "1"
r_avglight "1"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
r_avglightmap "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.11"
r_bloomtintb "0.11"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "2.2"
r_bloomtintexponent "2.2"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.59"
r_bloomtintg "0.59"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.3"
r_bloomtintr "0.3"

// Flags: FCVAR_CHEAT
// Default: "0"
r_brush_queue_mode "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
r_buildingmapforworld "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_colorstaticprops "0"

// Use shadow fast path for CSM rendering - minimize number of draw call
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_csm_fast_path "1"

// Use a precomputed static VB for CSM rendering
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_csm_static_vb "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
r_csm_viewmodelquality "1"

// Set to 1 to randomize static lighting for debugging.  Must restart for change to take affect.
// Flags: FCVAR_CHEAT
// Default: "0"
r_debugrandomstaticlighting "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "4"
r_decal_cover_count "4"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.4"
r_decal_overlap_area "0.4"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "3"
r_decal_overlap_count "3"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2048"
r_decals "2048"

// Decal static props test
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_decalstaticprops "1"

// If non-zero when a map loads, static props won't be loaded
// Flags: FCVAR_CHEAT
// Default: "0"
r_disable_static_prop_loading "0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
r_dlightsenable "1"

// Render decals batched.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_drawbatchdecals "1"

// Render brush models. 0=Off, 1=Normal, 2=Wireframe
// Flags: FCVAR_CHEAT
// Default: "1"
r_drawbrushmodels "1"

// Draw clip brushes (red=NPC+player, pink=player, purple=NPC)
// Flags: FCVAR_CHEAT
// Default: "0"
r_drawclipbrushes "0"

// Render decals.
// Flags: FCVAR_CHEAT
// Default: "1"
r_drawdecals "1"

// Flags: FCVAR_CHEAT
// Default: "1"
r_drawentities "1"

// Render func_detail
// Flags: FCVAR_CHEAT
// Default: "1"
r_drawfuncdetail "1"

// Draw the specified leaf.
// Flags: FCVAR_CHEAT
// Default: "-1"
r_drawleaf "-1"

// 0: off
// 1: draw light cache entries
// 2: draw rays
// 
// Flags: FCVAR_CHEAT
// Default: "0"
r_drawlightcache "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_drawlightinfo "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_drawlights "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_drawmodeldecals "1"

// Flags: FCVAR_CHEAT
// Default: "0"
r_drawmodelstatsoverlay "0"

// Flags: FCVAR_CHEAT
// Default: "500"
r_drawmodelstatsoverlaydistance "500"

// Flags: FCVAR_CHEAT
// Default: "-1"
r_drawmodelstatsoverlayfilter "-1"

// time in milliseconds beyond which a model overlay is fully red in r_drawmodelstatsoverlay 2
// Flags: FCVAR_ARCHIVE
// Default: "1.5"
r_drawmodelstatsoverlaymax "1.5"

// time in milliseconds that a model must take to render before showing an overlay in r_drawmodelstatsoverlay 2
// Flags: FCVAR_ARCHIVE
// Default: "0.1"
r_drawmodelstatsoverlaymin "0.1"

// Flags: FCVAR_CHEAT
// Default: "1"
r_drawskybox "1"

// 0=Off, 1=Normal, 2=Wireframe
// Flags: FCVAR_CHEAT
// Default: "1"
r_drawstaticprops "1"

// Flags: FCVAR_CHEAT
// Default: "1"
r_drawtranslucentworld "1"

// Enable the rendering of vgui panels
// Flags: FCVAR_CHEAT
// Default: "1"
r_drawvgui "1"

// Render the world.
// Flags: FCVAR_CHEAT
// Default: "1"
r_drawworld "1"

// Flags: FCVAR_CHEAT
// Default: "90"
r_dscale_basefov "90"

// Flags: FCVAR_CHEAT
// Default: "2000"
r_dscale_fardist "2000"

// Flags: FCVAR_CHEAT
// Default: "4"
r_dscale_farscale "4"

// Flags: FCVAR_CHEAT
// Default: "100"
r_dscale_neardist "100"

// Flags: FCVAR_CHEAT
// Default: "1"
r_dscale_nearscale "1"

// Flags: FCVAR_RELEASE
// Default: "1"
r_dynamic "1"

// Flags: FCVAR_CHEAT
// Default: "1"
r_dynamiclighting "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "-1"
r_entity "-1"

// The number of pixels wide an eyeball has to be before rendering an eyeglint.  Is a floating point value.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "20.0"
r_eyeglintlodpixels "20.0"

// Flags: FCVAR_ARCHIVE
// Default: "1"
r_eyemove "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_eyes "1"

// Flags: FCVAR_ARCHIVE
// Default: "0"
r_eyeshift_x "0"

// Flags: FCVAR_ARCHIVE
// Default: "0"
r_eyeshift_y "0"

// Flags: FCVAR_ARCHIVE
// Default: "0"
r_eyeshift_z "0"

// Flags: FCVAR_ARCHIVE
// Default: "0"
r_eyesize "0"

// Activate/deactivates a fast z-setting algorithm to take advantage of hardware with fast z reject. Use -1 to default to hardware settings
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_fastzreject "0"

// Activates/deactivates fast z rejection on displacements (360 only). Only active when r_fastzreject is on.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_fastzrejectdisp "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_flashlight_always_cull_for_single_pass "0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0.25"
r_flashlightbrightness "0.25"

// Flags: FCVAR_CHEAT
// Default: "0"
r_flashlightclip "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_flashlightculldepth "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_flashlightdepthtexture "1"

// Flags: FCVAR_CHEAT
// Default: "0"
r_flashlightdrawclip "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_flashlightdrawdepth "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "256"
r_flashlightdrawdepthres "256"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_flashlightdrawsweptbbox "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_flashlightnodraw "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_flashlightrender "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_flashlightrendermodels "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_flashlightrenderworld "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
r_flashlightscissor "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_flashlightupdatedepth "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_flex "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_frustumcullworld "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_glint_alwaysdraw "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_glint_procedural "0"

// If enabled, hides all surfaces which have been painted.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_hidepaintedsurfaces "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_hunkalloclightmaps "1"

// Flags: FCVAR_CHEAT
// Min: "0" Max: "0"
// Default: "0"
r_hwmorph "0"

// 0 - validate vhvhdr and studiohdr checksum, 1 - default, ignore checksum (useful if iterating physics model only for example)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "1"
r_ignoreStaticColorChecksum "1"

// Flags: FCVAR_CHEAT
// Default: ".3"
r_itemblinkmax ".3"

// Flags: FCVAR_CHEAT
// Default: "4.5"
r_itemblinkrate "4.5"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_keepstyledlightmapsonly "0"

// Activates/deactivate light averaging
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_lightaverage "1"

// number of random directions to fire rays when computing ambient lighting
// Flags: FCVAR_CHEAT
// Min: "1" Max: "162"
// Default: "162"
r_lightcache_numambientsamples "162"

// Allow lights to influence lightcaches beyond the lights' radii
// Flags: FCVAR_CHEAT
// Default: "1000"
r_lightcache_radiusfactor "1000"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_lightcache_zbuffercache "0"

// Flags: FCVAR_CHEAT
// Default: "1"
r_lightcachecenter "1"

// Flags: FCVAR_CHEAT
// Default: "-1"
r_lightcachemodel "-1"

// Controls the speed of light interpolation, 0 turns off interpolation
// Flags: FCVAR_CHEAT
// Default: "5"
r_lightinterp "5"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1"
r_lightmap "-1"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "-1"
r_lightstyle "-1"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
r_lightwarpidentity "0"

// Lock the PVS so you can fly around and inspect what is being drawn.
// Flags: FCVAR_CHEAT
// Default: "0"
r_lockpvs "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "-1"
r_lod "-1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "1"
r_lod_switch_scale "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "32"
r_maxdlights "32"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "50"
r_maxmodeldecal "50"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "6"
r_maxnewsamples "6"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "128"
r_maxsampledist "128"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "3"
r_minnewsamples "3"

// Minimum value for the ambient lighting on dynamic models with more than one bone (like players and their guns).
// Flags: FCVAR_CHEAT
// Default: "0.0"
r_modelAmbientMin "0.0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_modelwireframedecal "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_nohw "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_norefresh "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_nosw "0"

// Turn off the PVS.
// Flags: FCVAR_CHEAT
// Default: "0"
r_novis "0"

// Prevents occlusion testing for entities that take up more than X% of the screen. 0 means use whatever the level said to use.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_occludeemaxarea "0"

// Prevents this occluder from being used if it takes up less than X% of the screen. 0 means use whatever the level said to use.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_occluderminarea "0"

// At least this many occluders will be used, no matter how big they are.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_occludermincount "0"

// Activate/deactivate the occlusion system.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_occlusion "1"

// Activate/deactivates spew about what the occlusion system is doing.
// Flags: FCVAR_CHEAT
// Default: "0"
r_occlusionspew "0"

// Set this to revert to HL2's method of selecting lights
// Flags: FCVAR_CHEAT
// Default: "0"
r_oldlightselection "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_overlayfadeenable "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2000"
r_overlayfademax "2000"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1750"
r_overlayfademin "1750"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_overlaywireframe "0"

// Displays a particular level of the spatial partition system. Use -1 to disable it.
// Flags: FCVAR_CHEAT
// Default: "-1"
r_partition_level "-1"

// Enables an optimization that allows portals to be culled when outside of the PVS.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_portal_use_pvs_optimization "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_portalscloseall "0"

// Open all portals
// Flags: FCVAR_CHEAT
// Default: "0"
r_portalsopenall "0"

// 0=Off, 1=On, 2=Show Errors
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_proplightingfromdisk "1"

// 0 - off, 1 - static prop color meshes are allocated from a single shared vertex buffer (on hardware that supports stream offset)
// Flags: FCVAR_CHEAT
// Default: "-1.0"
r_proplightingpooling "-1.0"

// 0: no radiosity
// 1: radiosity with ambient cube (6 samples)
// 2: radiosity with 162 samples
// 3: 162 samples for static props, 6 samples for everything else
// Flags: FCVAR_CHEAT
// Default: "4"
r_radiosity "4"

// Flags: FCVAR_CHEAT
// Default: "0"
r_randomflex "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_redownloadallpaintmaps "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_renderoverlaybatch "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_renderoverlayfragment "1"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1"
r_rimlight "1"

// Root LOD
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
r_rootlod "0"

// 1 = use shader srgb texture reads, 0 = use HW
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
r_shader_srgbread "0"

// Toggle deferred shadow rendering
// Flags: FCVAR_CHEAT
// Default: "0"
r_shadow_deferred "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_shadowids "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_shadowrendertotexture "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_shadows "1"

// Flags: FCVAR_CHEAT
// Default: "-1"
r_shadows_gamecontrol "-1"

// Flags: FCVAR_CHEAT
// Default: "0"
r_shadowwireframe "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_showenvcubemap "0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "1.0f"
r_showz_power "1.0f"

// Flags: FCVAR_CHEAT
// Default: "0"
r_skin "0"

// Draws skybox after world brush geometry, rather than before.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_skybox_draw_last "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_slowpathwireframe "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "-1"
r_snapportal "-1"

// 0 - support three color streams, 1 - use avg of three streams, 2 - single color stream
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "0"
r_staticlight_mode "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "1"
r_staticlight_streams "3"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "-"
r_staticlight_streams_indirect_only "-"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "-1"
r_staticprop_lod "-1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_staticpropinfo "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
r_teeth "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_threaded_shadow_clip "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_unloadlightmaps "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1.5"
r_vehicleBrakeRate "1.5"

// Draw leaf ambient lighting samples.  Needs mat_leafvis 1 to work
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
r_visambient "0"

// Activate/deactivate wireframe rendering of what the occlusion system is doing.
// Flags: FCVAR_CHEAT
// Default: "0"
r_visocclusion "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_visualizelighttraces "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_visualizelighttracesshowfulltrace "0"

// Flags: FCVAR_CHEAT
// Default: "0"
r_visualizetraces "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.0002"
r_worldlightmin "0.0002"

// number of world lights to use per vertex
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "3"
r_worldlights "3"

// at this distance and beyond you need to be point right at someone to see them
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Min: "10"
// Default: "1000.0f"
radarvisdistance "1000.0f"

// how closely you have to point at someone to see them beyond max distance
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Min: "0" Max: "1"
// Default: ".996"
radarvismaxdot ".996"

// 0 for traditional method, 1 for more realistic method
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Min: "0" Max: "1"
// Default: "1"
radarvismethod "1"

// the degree to which you can point away from a target, and still see them on radar.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: ".4"
radarvispow ".4"

// Max bytes/sec the host can receive data
// Flags: FCVAR_ARCHIVE|FCVAR_USERINFO
// Default: "196608"
rate "196608"

// Address of remote server if sending unconnected rcon commands (format x.x.x.x:p) 
// Flags: FCVAR_DONTRECORD|FCVAR_RELEASE|FCVAR_SERVER_CANNOT_QUERY
// Default: ""
rcon_address ""

// remote console password.
// Flags: FCVAR_DONTRECORD|FCVAR_RELEASE|FCVAR_SERVER_CANNOT_QUERY
// Default: ""
rcon_password ""

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
reload_materials "0"

// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
replay_debug "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
res_restrict_access "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "0"
room_type "0"

// Flags: FCVAR_CHEAT|FCVAR_MATERIAL_SYSTEM_THREAD
// Default: "2.0"
rope_min_pixel_diameter "2.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM|FCVAR_DONTRECORD
// Default: "0.25"
rpt_vprof_time "0.25"

// Set to 1 to see debug related to the Question & Answer system used to create conversations between allied NPCs.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
rr_debug_qa "0"

// If set, rr_debugresponses will print only responses testing for the specified concept
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: ""
rr_debugresponseconcept ""

// Show verbose matching output (1 for simple, 2 for rule scoring, 3 for noisy). If set to 4, it will only show response success/failure for npc_selected NPCs.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
rr_debugresponses "0"

// If set to the name of the rule, that rule's score will be shown whenever a concept is passed into the response rules system.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: ""
rr_debugrule ""

// Dump all response_rules.txt and rules (requires restart)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
rr_dumpresponses "0"

// 'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1800"
rr_followup_maxdist "1800"

// AIs will not even consider remarkarbles that are more than this many units away.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1200"
rr_remarkable_max_distance "1200"

// TLK_REMARKs will be dispatched no more than this many times for any given info_remarkable
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
rr_remarkable_world_entities_replay_limit "1"

// If 1, polling for info_remarkables and issuances of TLK_REMARK is enabled.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
rr_remarkables_enabled "1"

// When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.0"
rr_thenany_score_slop "0.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
save_async "1"

// For testing, adds this many milliseconds of delay to the save operation.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
save_asyncdelay "0"

// Autosave on the PC behaves like it does on the consoles.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
save_console "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
save_disable "0"

// Keep this many old copies in history of autosaves and quicksaves.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
save_history_count "1"

// Number of frames to defer for drawing the Saving message.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
save_huddelayframes "1"

// Set to 1 to save to memory instead of disk (Xbox 360)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
save_in_memory "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "0"
save_multiplayer_override "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
save_noxsave "0"

// 0 = none, 1 = non-autosave, 2 = always
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
save_screenshot "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
save_spew "0"

// How to map the analog joystick deadzone and extents 0 = Scaled Cross, 1 = Concentric Mapping to Square.
// Flags: FCVAR_ARCHIVE
// Default: "1"
sc_joystick_map "1"

// Display async .ani file loading info.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
scene_async_prefetch_spew "0"

// Clamp head turns to a MAX of 20 degrees per think.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
scene_clamplookat "1"

// Do client side flex animation.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
scene_clientflex "1"

// Play all vcds on the clients.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
scene_clientplayback "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
scene_flatturn "1"

// When playing back, force use of combined .wav files even in english.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
scene_forcecombined "0"

// Only show closed captions if recipient is within this many units of speaking actor (0==disabled).
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1200"
scene_maxcaptionradius "1200"

// When playing back a scene, print timing and event info to console.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
scene_print "0"

// When playing back, show the directions of faceto events.
// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "0"
scene_showfaceto "0"

// When playing back, show the directions of look events.
// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "0"
scene_showlook "0"

// When moving, show the end location.
// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "0"
scene_showmoveto "0"

// Show when a vcd is playing but normal AI is running.
// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "0"
scene_showunlock "0"

// Bonus for blinding enemy players
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "10"
score_blind_enemy_bonus "10"

// Penalty for blinding friendly players
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "10"
score_blind_friendly_penalty "10"

// Points awarded for defusing or assisting with defuse of bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "400"
score_bomb_defuse_bonus "400"

// Inner radius (full bonus) for defusing or assisting with defusing the bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "120"
score_bomb_defuse_radius_inner "120"

// Outer radius (zero bonus) for defusing or assisting with defseing the bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "600"
score_bomb_defuse_radius_outer "600"

// Points awarded for planting or assisting with planting the bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "200"
score_bomb_plant_bonus "200"

// Inner radius (full bonus) for planting or assisting with planting the bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "120"
score_bomb_plant_radius_inner "120"

// Outer radius (zero bonus) for planting or assisting with planting the bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "600"
score_bomb_plant_radius_outer "600"

// Points awarded for each point of damage to an enemy
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
score_damage "1"

// Default points for a new user
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1000"
score_default "1000"

// Points awarded for damaging enemy near dropped bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
score_dropped_bomb_proximity_damage_bonus "1"

// Inner radius (full bonus) for doing damage near dropped bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "120"
score_dropped_bomb_proximity_damage_bonus_radius_inner "120"

// Outer radius (zero bonus) for doing damage near dropped bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "600"
score_dropped_bomb_proximity_damage_bonus_radius_outer "600"

// Points awarded for damaging enemy near dropped defuser
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
score_dropped_defuser_proximity_damage_bonus "1"

// Inner radius (full bonus) for doing damage near dropped defuser
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "120"
score_dropped_defuser_proximity_damage_radius_inner "120"

// Outer radius (zero bonus) for doing damage near dropped defuser
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "600"
score_dropped_defuser_proximity_damage_radius_outer "600"

// Penalty awarded for each point of damage to a teammate
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
score_ff_damage "1"

// Penalty for damaging a hostage
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "2"
score_hostage_damage_penalty "2"

// Points awarded for damaging enemy near live hostage
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
score_hostage_proximity_damage_bonus "1"

// Inner radius (full bonus) for doing damage near hostage
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "120"
score_hostage_proximity_damage_radius_inner "120"

// Outer radius (zero bonus) for doing damage near hostage
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "600"
score_hostage_proximity_damage_radius_outer "600"

// Points awarded for rescuing a hostage
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "100"
score_hostage_rescue_bonus "100"

// Inner radius (full bonus) for rescuing hostage
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "120"
score_hostage_rescue_radius_inner "120"

// Outer radius (zero bonus) for rescuing hostage
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "600"
score_hostage_rescue_radius_outer "600"

// Points awarded for killing an enemy
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
score_kill_enemy_bonus "0"

// Points awarded for damaging enemy near planted bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
score_planted_bomb_proximity_damage_bonus "1"

// Inner radius (full bonus) for doing damage near planted bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "120"
score_planted_bomb_proximity_damage_radius_inner "120"

// Outer radius (zero bonus) for doing damage near planted bomb
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "600"
score_planted_bomb_proximity_damage_radius_outer "600"

// Points awarded for each point of damage a nearby (in same zone) teammate does to enemies
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
score_team_damage_bonus "1"

// An average good score for use in funfacts
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "5"
score_typical_good_score "5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
script_connect_debugger_on_mapspawn "0"

// verbosity level for SteamNetSockets spew
// Flags: FCVAR_RELEASE
// Default: "5"
sdr_spew_level "5"

// Is the server browser window active
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: ""
server_browser_dialog_open ""

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "server.cfg"
servercfgfile "server.cfg"

// Enable the texture budget panel.
// Flags: FCVAR_CHEAT
// Default: "0"
showbudget_texture "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.0f"
showbudget_texture_global_sum "0.0f"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
showhitlocation "0"

// Shows trigger brushes
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
showtriggers "0"

// Run engine in single step mode ( set next to 1 to advance a frame )
// Flags: FCVAR_CHEAT
// Default: "0"
singlestep "0"

// Time taken for an ally to regenerate a point of health.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.3003"
sk_ally_regen_time "0.3003"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_REPLICATED
// Default: "1"
sk_autoaim_mode "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sk_npc_arm "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sk_npc_chest "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "2"
sk_npc_head "2"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sk_npc_leg "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sk_npc_stomach "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sk_player_arm "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sk_player_chest "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "2"
sk_player_head "2"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sk_player_leg "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sk_player_stomach "1"

// Game skill level (1-3).
// Flags: FCVAR_ARCHIVE
// Min: "1" Max: "3"
// Default: "1"
skill "1.000000"

// Sleep instead of spinning if we're meeting the desired framerate.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sleep_when_meeting_framerate "1"

// SourceMod base path (set via command line)
// Default: "addons\sourcemod"
sm_basepath "addons\sourcemod"

// SourceMod core configuration file
// Default: "addons\sourcemod\configs\core.cfg"
sm_corecfgfile "addons\sourcemod\configs\core.cfg"

// Default formatting time rules
// Default: "%m/%d/%Y - %H:%M:%S"
sm_datetime_format "%d/%m/%Y - %H:%M:%S"

// Log Debug information about potential connection issues.
// Default: "0"
sm_debug_connect "0"

// Mode for deciding immunity protection
// Flags: FCVAR_SPONLY
// Default: "1"
sm_immunity_mode "1"

// Default: "20"
sm_maphistory_size "20"

// Sets whether SourceMod menus play trigger sounds
// Default: "1"
sm_menu_sounds "1"

// Flags: FCVAR_NOTIFY
// Default: ""
sm_nextmap ""

// Activity display setting (see sourcemod.cfg)
// Flags: FCVAR_SPONLY
// Default: "13"
sm_show_activity "13"

// Adjusts the server time in seconds
// Default: "0"
sm_time_adjustment "0"

// Sets the recommended time in between public votes
// Default: "30"
sm_vote_delay "30"

// Show current vote progress as chat messages
// Min: "0" Max: "1"
// Default: "0"
sm_vote_progress_chat "0"

// Show current vote progress as console messages to clients
// Min: "0" Max: "1"
// Default: "0"
sm_vote_progress_client_console "0"

// Show current vote progress as console messages
// Min: "0" Max: "1"
// Default: "0"
sm_vote_progress_console "0"

// Show current vote progress in a hint box
// Min: "0" Max: "1"
// Default: "0"
sm_vote_progress_hintbox "1"

// Smooth player eye z coordinate when traversing stairs.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
smoothstairs "1"

// All playback is fully async (sound doesn't play until data arrives).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_async_fullyasync "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "262144"
snd_async_minsize "262144"

// Spew message to console any time async sound loading blocks on file i/o.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_async_spew_blocking "0"

// Spew stream pool failures.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_async_stream_fail "0"

// Spew stream pool purges.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_async_stream_purges "0"

// If 1, recovers when the stream is exhausted when playing PCM sounds (prevents music or ambiance sounds to stop if too many sounds are played). Set to 0, to stop the sound otherwise.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_async_stream_recover_from_exhausted_stream "1"

// Spew streaming info ( 0=Off, 1=streams, 2=buffers
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_async_stream_spew "0"

// Filter used to spew sounds that starts late. Use an empty string "" to display all sounds. By default only the VO are displayed.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "vo"
snd_async_stream_spew_delayed_start_filter "vo"

// Spew any asynchronous sound that starts with more than N milliseconds delay. By default spew when there is more than 500 ms delay.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "500"
snd_async_stream_spew_delayed_start_time "500"

// If 1, spews warnings when the buffer is exhausted (recommended). Set to 0 for no spew (for debugging purpose only).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_async_stream_spew_exhausted_buffer "1"

// Number of milliseconds between each exhausted buffer spew.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1000"
snd_async_stream_spew_exhausted_buffer_time "1000"

// If 1, spews allocations on the static alloc pool. Set to 0 for no spew.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_async_stream_static_alloc "0"

// If nonzero, aggressively cull duplicate sounds during mixing. The number specifies the number of duplicates allowed to be played.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_cull_duplicates "0"

// Relative volume of the death camera music.
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1.0"
snd_deathcamera_volume "1.0"

// Visualize sound gain fall off
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_debug_gaincurve "0"

// Visualize sound gain fall off
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
snd_debug_gaincurvevol "1.0"

// Visualize panning crossfade curves
// Flags: FCVAR_CHEAT
// Default: "0"
snd_debug_panlaw "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_defer_trace "1"

// Enables update of delay for choreo to compensate for IO latency.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_delay_for_choreo_enabled "1"

// Resets the choreo latency after N milliseconds of VO not playing. Default is 500 ms.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "500"
snd_delay_for_choreo_reset_after_N_milliseconds "500"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.03"
snd_delay_sound_shift "0.03"

// Disables using an audio cache and relies on streaming audio data instead.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "1"
snd_disable_legacy_audio_cache_hidden "1"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_disable_mixer_duck "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_disable_mixer_solo "0"

// Number of milliseconds after an unused previous preset is not considered valid for the start of a cross-fade.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1000"
snd_dsp_cancel_old_preset_after_N_milliseconds "1000"

// Turns optimization on for DSP effects if set to 1 (default). 0 to turn the optimization off.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_dsp_optimization "0"

// Spews major changes to the dsp or presets if set to 1. 0 to turn the spew off (default).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_dsp_spew_changes "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
snd_dsp_test1 "1.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
snd_dsp_test2 "1.0"

// Flags: FCVAR_ARCHIVE
// Default: "0.5"
snd_duckerattacktime "0.5"

// Flags: FCVAR_ARCHIVE
// Default: "2.5"
snd_duckerreleasetime "2.5"

// Flags: FCVAR_ARCHIVE
// Default: "0.15"
snd_duckerthreshold "0.15"

// Flags: FCVAR_ARCHIVE
// Default: "1"
snd_ducking_off "1"

// Flags: FCVAR_ARCHIVE
// Default: "0.55"
snd_ducktovolume "0.55"

// Play full 'far' sound at this distance
// Flags: FCVAR_CHEAT
// Default: "1320"
snd_dvar_dist_max "1320"

// Play full 'near' sound at this distance
// Flags: FCVAR_CHEAT
// Default: "240"
snd_dvar_dist_min "240"

// Relative volume of the Danger Zone victory music.
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "0.2"
snd_dzmusic_volume "0.2"

// Flags: FCVAR_CHEAT
// Default: ""
snd_filter ""

// Scan every channel to find the corresponding sound.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
snd_find_channel ""

// foliage dB loss per 1200 units
// Flags: FCVAR_CHEAT
// Default: "4"
snd_foliage_db_loss "4"

// Flags: FCVAR_CHEAT
// Default: "1"
snd_gain "1"

// Flags: FCVAR_CHEAT
// Default: "1"
snd_gain_max "1"

// Flags: FCVAR_CHEAT
// Default: "0.01"
snd_gain_min "0.01"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_hrtf_async "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_hrtf_benchmark "0"

// HRTF calculations will calculate the player as being this far behind the camera
// 
// Flags: FCVAR_ARCHIVE
// Default: "100"
snd_hrtf_distance_behind "100"

// Flags: FCVAR_CHEAT
// Default: "800.0"
snd_hrtf_lerp_max_distance "800.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_hrtf_lerp_method "1"

// Flags: FCVAR_CHEAT
// Default: "100.0"
snd_hrtf_lerp_min_distance "100.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_hrtf_passthrough "0"

// Flags: FCVAR_CHEAT
// Default: "1"
snd_hrtf_stereo_blend "1"

// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "0.1"
snd_hrtf_voice_delay "0.1"

// Controls volume of HRTF sounds
// Flags: FCVAR_CHEAT
// Default: "0.8"
snd_hrtf_volume "0.8"

// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "0"
snd_hwcompat "0"

// Flags: FCVAR_CHEAT
// Default: ""
snd_list ""

// Makes main menu music sound like a radio
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.0"
snd_mainmusic_hrtf "0.0"

// Makes main menu music sound like a radio
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.03"
snd_mainmusic_hrtf_transition_speed "0.03"

// Relative volume of map objective music.
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1.0"
snd_mapobjective_volume "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.08"
snd_max_pitch_shift_inaccuracy "0.08"

// Flags: FCVAR_CHEAT
// Default: "4"
snd_max_same_sounds "4"

// Flags: FCVAR_CHEAT
// Default: "3"
snd_max_same_weapon_sounds "3"

// Relative volume of the main menu music.
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1.0"
snd_menumusic_volume "1.0"

// Sound merge method (0 == sum and clip, 1 == max, 2 == avg).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_mergemethod "1"

// Sets sound to get mixed asynchronously on a different thread
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1"
snd_mix_async "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "120.0"
snd_mix_async_frequency "120.0"

// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "0"
snd_mix_async_onetime_reset "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
snd_mix_dry_volume "1.0"

// Turns optimization on for mixing if set to 1 (default). 0 to turn the optimization off.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_mix_optimization "0"

// Turns sound char on for mixing if set to 1 (default). 0 to turn the sound char off and use default behavior (spatial instead of doppler, directional, etc...).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_mix_soundchar_enabled "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
snd_mix_test1 "1.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
snd_mix_test2 "1.0"

// Flags: FCVAR_ARCHIVE
// Default: "0.025"
snd_mixahead "0.025"

// Flags: FCVAR_CHEAT
// Default: "1.0"
snd_mixer_master_dsp "1.0"

// Flags: FCVAR_CHEAT
// Default: "1.0"
snd_mixer_master_level "1.0"

// Defer sound recording until next tick when laying off movies.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_moviefix "1"

// Specifies an amount to boost music volume by
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
snd_music_boost "0"

// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "0"
snd_music_volume_onetime_reset_2 "0"

// Overall music volume
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "1.0"
snd_musicvolume_fixed "1.0"

// Music volume multiplier when Steam Overlay is active
// Flags: FCVAR_ARCHIVE|FCVAR_ARCHIVE_XBOX
// Min: "0" Max: "1"
// Default: "0.1"
snd_musicvolume_multiplier_inoverlay "0.1"

// Flags: FCVAR_ARCHIVE|FCVAR_NOT_CONNECTED
// Default: "1"
snd_mute_losefocus "1"

// Relative volume of the MVP music.
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1.0"
snd_mvp_volume "1.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_noextraupdate "0"

// Flags: FCVAR_CHEAT
// Default: "-2.70"
snd_obscured_gain_dB "-2.70"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: "1"
snd_occlusion "1"

// Flags: FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1"
snd_occlusion_bounces "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "4.0"
snd_occlusion_collide_min_distance "4.0"

// Flags: FCVAR_CHEAT
// Default: "0.20"
snd_occlusion_eq_high "0.20"

// Flags: FCVAR_CHEAT
// Default: "0.10"
snd_occlusion_eq_low "0.10"

// Flags: FCVAR_CHEAT
// Default: "1.0"
snd_occlusion_eq_mid "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "0.85"
snd_occlusion_indirect_max "0.85"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "0.3"
snd_occlusion_indirect_min "0.3"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "120.0"
snd_occlusion_indirect_radius "120.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: ""
snd_occlusion_material_override ""

// Flags: FCVAR_CHEAT
// Default: "1.05"
snd_occlusion_no_eq_scale "1.05"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: ""
snd_occlusion_pos_override ""

// Flags: FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "4"
snd_occlusion_rays "4"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "0"
snd_occlusion_visualize "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: ""
snd_occlusion_visualize_filter ""

// Flags: FCVAR_CHEAT
// Default: "1.0"
snd_op_test_convar "1.0"

// Specifies to pause all sounds and not just voice
// Flags: FCVAR_CHEAT
// Default: "1"
snd_pause_all "1"

// Flags: FCVAR_ARCHIVE
// Default: "1"
snd_pitchquality "1"

// Flags: FCVAR_CHEAT
// Default: "1"
snd_pre_gain_dist_falloff "1"

// Prefetch common sounds from directories specified in scripts/sound_prefetch.txt
// Flags: FCVAR_RELEASE
// Default: "1"
snd_prefetch_common "1"

// switch to en/disable the prevention of splitscreen audio file duplicates
// 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
snd_prevent_ss_duplicates "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DEMO
// Default: "0"
snd_profile "0"

// How much to scale rear speaker contribution to front stereo output
// Flags: FCVAR_CHEAT
// Default: "1.0"
snd_rear_speaker_scale "1.0"

// Reference dB at snd_refdist
// Flags: FCVAR_CHEAT
// Default: "60"
snd_refdb "60"

// Reference distance for snd_refdb
// Flags: FCVAR_CHEAT
// Default: "36"
snd_refdist "36"

// If set to 1, report all sound formats.
// 
// Flags: FCVAR_CHEAT
// Default: "0"
snd_report_format_sound "0"

// If set to 1, report all sounds that just looped.
// 
// Flags: FCVAR_CHEAT
// Default: "0"
snd_report_loop_sound "0"

// If set to 1, report all sounds played with S_StartSound(). The sound may not end up being played (if error occurred for example). Use snd_showstart to see the sounds that are really played.
// 
// Flags: FCVAR_CHEAT
// Default: "0"
snd_report_start_sound "0"

// If set to 1, report all sounds stopped with S_StopSound().
// 
// Flags: FCVAR_CHEAT
// Default: "0"
snd_report_stop_sound "0"

// If set to 1, report more error found when playing sounds.
// 
// Flags: FCVAR_CHEAT
// Default: "0"
snd_report_verbose_error "0"

// Relative volume of round end music.
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1.0"
snd_roundend_volume "1.0"

// Relative volume of round start music.
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1.0"
snd_roundstart_volume "1.0"

// Show sounds info
// Flags: FCVAR_CHEAT
// Default: "0"
snd_show "0"

// Show the current count of channel types.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_show_channel_count "0"

// Logs all sound events that are emitted
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_show_events "0"

// Limit debug sounds to those containing this substring
// Flags: FCVAR_CHEAT
// Default: ""
snd_show_filter ""

// Print to console the sounds that are normally printed on screen only. 1 = print to console and to screen; 2 = print only to console
// Flags: FCVAR_CHEAT
// Default: "0"
snd_show_print "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_showclassname "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_showmixer "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_showstart "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_sos_allow_dynamic_chantype "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_sos_exec_when_paused "1"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_list_operator_updates "0"

// Spew data about the list of block entries.
// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_block_debug "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_client_rcv "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_sos_show_entry_match_free "0"

// Flags: FCVAR_CHEAT
// Default: ""
snd_sos_show_operator_entry_filter ""

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_operator_init "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_operator_parse "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_operator_prestart "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_operator_shutdown "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_operator_start "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_operator_stop_entry "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_operator_updates "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_sos_show_opvar_list "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_queuetotrack "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
snd_sos_show_server_xmit "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_sos_show_source_info "0"

// Flags: FCVAR_CHEAT
// Default: "0"
snd_sos_show_startqueue "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_sos_show_track_list "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "Default_Mix"
snd_soundmixer "Default_Mix"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_soundmixer_parse_debug "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
snd_soundmixer_version "2"

// Lowend optimization: if nonzero, spatialize only a fraction of sound channels each frame. 1/2^x of channels will be spatialized per frame.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_spatialize_roundrobin "0"

// Spews text every time a DSP effect is applied if set to 1. 0 to turn the spew off (default).
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_spew_dsp_process "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
snd_store_filepaths ""

// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "-1"
snd_surround_speakers "-1"

// Relative volume of ten second warning music.
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "1.0"
snd_tensecondwarning_volume "1.0"

// Show sounds location in world
// Flags: FCVAR_CHEAT
// Default: "0"
snd_visualize "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_voice_echo "0"

// If current and target volumes are close, don't cross-fade.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "5.0"
snd_vol_no_xfade "5.0"

// Never change volume by more than +/-N units per frame during cross-fade.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "20.0"
snd_vol_xfade_incr_max "20.0"

// Doppler effect is extremely sensible to volume variation. To reduce the pops, the cross-fade has to be very slow.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
snd_vol_xfade_speed_multiplier_for_doppler "1"

// Channel volume cross-fade time in seconds.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.070"
snd_vol_xfade_time "0.070"

// Shows sentence name for sentences which are set not to show captions.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
snd_vox_captiontrace "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "300"
snd_vox_globaltimeout "300"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "300"
snd_vox_sectimetout "300"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "300"
snd_vox_seqtimetout "300"

// ID of the sound device to use
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE|FCVAR_NOT_CONNECTED
// Default: ""
sound_device_override ""

// How long looping soundpatch captions should display for.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2.0"
soundpatch_captionlength "2.0"

// When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
soundscape_debug "0"

// SourceMod Version
// Flags: FCVAR_SPONLY|FCVAR_NOTIFY
// Default: "1.9.0.6267"
sourcemod_version "1.9.0.6267"

// If nonzero, allow free-roaming spectator camera.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
spec_allow_roaming "0"

// The time that the death cam will spend watching the player's ragdoll before going into the freeze death cam.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.8"
spec_freeze_deathanim_time "0.8"

// Time spent with the freeze panel still up after observer freeze cam is done.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.0"
spec_freeze_panel_extended_time "0"

// The target FOV that the deathcam should use.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "42"
spec_freeze_target_fov "42"

// The target FOV that the deathcam should use when the cam zoom far away on the target.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "90"
spec_freeze_target_fov_long "90"

// Time spend frozen in observer freeze cam.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3.0"
spec_freeze_time "5.0"

// Time players are prevented from skipping the freeze cam
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1.0"
spec_freeze_time_lock "1.0"

// Time taken to zoom in to frame a target in observer freeze cam.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0.01"
// Default: "0.3"
spec_freeze_traveltime "0.3"

// Enable Spectator Hltv Replay when killed by bot
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
spec_replay_bot "0"

// Hltv Replay delay in seconds
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "5"
spec_replay_cam_delay "5"

// Debug options for replay cam
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
spec_replay_cam_options "0"

// Enable Killer Replay, requires hltv server running (0:off, 1:default, 2:force)
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
spec_replay_enable "1"

// Replay time in seconds before the highlighted event
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "5.3438"
spec_replay_leadup_time "5.3438"

// How long to show the message about Killer Replay after death. The best setting is a bit shorter than spec_replay_autostart_delay + spec_replay_leadup_time + spec_replay_winddown_time
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "9.5"
spec_replay_message_time "9.5"

// When > 0, sets the mode whereas players see delayed replay, and are segregated into a domain of chat and voice separate from the alive players
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
spec_replay_on_death "0"

// Base time scale of Killer Replay.Experimental.
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
spec_replay_rate_base "1"

// Minimum allowable pause between replay requests in seconds
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3"
spec_replay_rate_limit "3"

// Round can be delayed by this much due to someone watching a replay; must be at least 3-4 seconds, otherwise the last replay will always be interrupted by round start, assuming normal pause between round_end and round_start events (7 seconds) and freezecam delay (2 seconds) and 7.4 second full replay (5.4 second pre-death and ~2 seconds post-death) and replay in/out switching (up to a second)
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
spec_replay_round_delay "0"

// The trailing time, in seconds, of replay past the event, including fade-out
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "2"
spec_replay_winddown_time "2"

// Route voice between splitscreen players on same system.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
ss_voice_hearpartner "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
steam_controller_haptics "1"

// The server session ID for the new steamworks gamestats.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_MATERIAL_SYSTEM|FCVAR_REPLICATED
// Default: "0"
steamworks_sessionid_server "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
step_spline "0"

// Rebuild dictionary file on every level load
// 
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
stringtable_alwaysrebuilddictionaries "0"

// Show sizes of string tables when building for signon
// 
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
stringtable_showsizes "0"

// Use dictionaries for string table networking
// 
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
stringtable_usedictionaries "1"

// Stripper Config Path
// Default: "addons/stripper"
stripper_cfg_path "addons/stripper"

// Stripper Version
// Flags: FCVAR_SPONLY|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "1.2.2"
stripper_version "1.2.2"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
studio_queue_mode "1"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "0.25"
suitvolume "0.25"

// Linear acceleration amount (old value is 5.6)
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "5.5"
sv_accelerate "5.5"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_accelerate_debug_speed "0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_accelerate_use_weapon_speed "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.87"
sv_air_max_horizontal_parachute_ratio "0.87"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "240"
sv_air_max_horizontal_parachute_speed "240"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "30"
sv_air_max_wishspeed "30"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_air_pushaway_dist "0"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "12"
sv_airaccelerate "12"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2.6"
sv_airaccelerate_parachute "2.6"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2.2"
sv_airaccelerate_rappel "2.2"

// Players can receive all other players' text chat, team restrictions apply
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_RELEASE
// Default: "1"
sv_allchat "1"

// Enables old concommand execution behavior allowing remote clients to run any command not explicitly flagged as disallowed.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_allow_legacy_cmd_execution_from_client "0"

// Allows the server set players in third person mode without the client slamming it back (if cheats are on, all clients can set thirdperson without this convar being set)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_allow_thirdperson "0"

// Allow voting?
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_allow_votes "0"

// Allow or disallow the wait command on clients connected to this server.
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_allow_wait_command "1"

// Allow clients to download files
// Flags: FCVAR_RELEASE
// Default: "1"
sv_allowdownload "1"

// Allow clients to upload customizations files
// Flags: FCVAR_RELEASE
// Default: "0"
sv_allowupload "0"

// Deprecated. Replaced with sv_talk_enemy_dead and sv_talk_enemy_living.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_alltalk "1"

// If set, server only simulates entities on even numbered ticks.
// 
// Flags: FCVAR_RELEASE
// Default: "0"
sv_alternateticks "0"

// Arms Race gun level after which vote to restart is disallowed
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_arms_race_vote_to_restart_disallowed_after "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "5"
sv_assassination_target_ratio "5"

// Adjust the difficulty of bots each round based on contribution score.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_auto_adjust_bot_difficulty "1"

// When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_auto_full_alltalk_during_warmup_half_end "1"

// Players automatically re-jump while holding jump button
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_autobunnyhopping "0"

// Enable automatic ammo purchase when inside buy zones during buy periods
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_autobuyammo "0"

// Set to 1 to autosave game on level transition. Does not affect autosave triggers.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_autosave "1"

// How much to slow down backwards motion
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0.6"
sv_backspeed "0.6"

// If running a benchmark and this is set, it will record a vprof file over the duration of the benchmark with filename benchmark.vprof.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_benchmark_autovprofrecord "0"

// If > 0, then it only runs the benchmark for this # of ticks.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "3300"
sv_benchmark_numticks "3300"

// Set to values other than 0 to select a bonus map challenge type.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
sv_bonus_challenge "0"

// Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0"
// Default: "1"
sv_bot_buy_decoy_weight "1"

// Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0"
// Default: "1"
sv_bot_buy_flash_weight "1"

// Chance bots will buy a grenade with leftover money (after prim, sec and armor). Input as percent (0-100.0)
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0" Max: "100"
// Default: "33"
sv_bot_buy_grenade_chance "33"

// Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0"
// Default: "6"
sv_bot_buy_hegrenade_weight "6"

// Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0"
// Default: "1"
sv_bot_buy_molotov_weight "1"

// Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0"
// Default: "1"
sv_bot_buy_smoke_weight "1"

// Bot difficulty while playing with Gamepad device
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_MATERIAL_SYSTEM|FCVAR_REPLICATED
// Default: "0"
sv_bot_difficulty_gamepad "0"

// Bot difficulty while playing with Hydra device
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_MATERIAL_SYSTEM|FCVAR_REPLICATED
// Default: "0"
sv_bot_difficulty_hydra "0"

// Bot difficulty while playing with Keyboard/Mouse device
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_MATERIAL_SYSTEM|FCVAR_REPLICATED
// Default: "0"
sv_bot_difficulty_kbm "0"

// Bot difficulty while playing with PS3Move device
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_MATERIAL_SYSTEM|FCVAR_REPLICATED
// Default: "0"
sv_bot_difficulty_ps3move "0"

// Bot difficulty while playing with SharpShooter device
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_MATERIAL_SYSTEM|FCVAR_REPLICATED
// Default: "0"
sv_bot_difficulty_sharpshooter "0"

// If set, this strips the bots of their weapons every round and forces them to rebuy.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_bots_force_rebuy_every_round "0"

// If > 0, some # of bots will lower thier difficulty each time they win. The argument defines how many will lower their difficulty each time.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_bots_get_easier_each_win "0"

// If > 0, some # of bots will raise thier difficulty each time CTs beat a Guardian wave. The argument defines how many will raise their difficulty each time
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_bots_get_harder_after_each_wave "0"

// Bounce multiplier for when physically simulated objects collide with other objects.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_bounce "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0.3"
sv_breachcharge_arm_delay "0.3"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0.8"
sv_breachcharge_delay_max "0.8"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_breachcharge_delay_min "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1200"
sv_breachcharge_distance_max "1200"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "600"
sv_breachcharge_distance_min "600"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1.0"
sv_breachcharge_fuse_max "1.0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0.7"
sv_breachcharge_fuse_min "0.7"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "8"
sv_broadcast_ugc_download_progress_interval "8"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_broadcast_ugc_downloads "0"

// Override for buy status map info. 0 = everyone can buy, 1 = ct only, 2 = t only 3 = nobody
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1"
sv_buy_status_override "-1"

// If set to 1, does an optimization to prevent extra SendTable_Encode calls.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_cacheencodedents "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1"
sv_chat_proximity "-1"

// Allow cheats on server
// Flags: FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_cheats "0"

// Whether the server will attempt to clamp velocities that could cause physics bugs or crashes.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_clamp_unsafe_velocities "1"

// cl_cmdrate is moved to within sv_client_cmdrate_difference units of cl_updaterate before it is clamped between sv_mincmdrate and sv_maxcmdrate.
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_client_cmdrate_difference "0"

// This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected). If sv_client_min_interp_ratio is -1, then this cvar has no effect.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_REPLICATED
// Default: "5"
sv_client_max_interp_ratio "5"

// This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected).
//               -1 = let clients set cl_interp_ratio to anything
//  any other value = set minimum value for cl_interp_ratio
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_REPLICATED
// Default: "1"
sv_client_min_interp_ratio "1"

// This can be used to force the value of cl_predict for connected clients (only while they are connected).
//    -1 = let clients set cl_predict to anything
//     0 = force cl_predict to 0
//     1 = force cl_predict to 1
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_REPLICATED
// Default: "-1"
sv_client_predict "-1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
sv_clip_penetration_traces_to_players "1"

// The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "30"
sv_clockcorrection_msecs "30"

// When set, ignores coach communication restrictions.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_coach_comm_unrestricted "0"

// Allows spectating and communicating with a team ( 'coach t' or 'coach ct' )
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_coaching_enabled "0"

// Set this to 1 to allow direct connects in Competitive mode
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_comp_mode_allow_dc "0"

// Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_competitive_minspec "1"

// Enable to force the server to show 5v5 scoreboards and allows spectators to see characters through walls.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_competitive_official_5v5 "0"

// 0 = compute all bot difficulties equally, 1 = compute unique bot difficulty for each bot 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
sv_compute_per_bot_difficulty "0"

// Whether the server enforces file consistency for critical files
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_consistency "0"

// Contact email for server sysop
// Flags: FCVAR_NOTIFY|FCVAR_RELEASE
// Default: ""
sv_contact ""

// Do extended check for encoding of timestamps against tickcount
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "1"
sv_creationtickcheck "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "200"
sv_cs_player_speed_has_hostage "200"

// Force cts to spawn on a bombsite
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "-1"
sv_ct_spawn_on_bombsite "-1"

// Turn this off to disable the player's damage feed in the console after getting killed.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_damage_print_enable "1"

// Set this to 0 to allow direct connects to a game in progress even if no presents are present
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_dc_friends_reqd "0"

// Dead players can speak (voice, text) to the living
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_deadtalk "0"

// Visualizes +use logic. Green cross=trace success, Red cross=trace too far, Green box=radius success
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
sv_debug_player_use "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_debug_ugc_downloads "0"

// Make sure entities correctly report whether or not their network data has changed.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_debugmanualmode "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_debugroundstats "0"

// Show temp entity bandwidth usage.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
sv_debugtempentities "0"

// Buffer size for delta entities
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "196608"
sv_delta_entity_full_buffer_size "196608"

// Print accumulated CalcDelta profiling data (only if sv_deltatime is on)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
sv_deltaprint "0"

// Enable profiling of CalcDelta calls
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
sv_deltatime "0"

// If set, clients won't slam the player model render settings each frame for immunity [mod authors use this]
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_disable_immunity_alpha "0"

// Prevent the motd from showing.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1"
sv_disable_motd "1"

// Disallow interpolating between observer targets on this server.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_disable_observer_interpolation "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "1"
sv_disable_pas "1"

// debug - disable trace query cache
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
sv_disable_querycache "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_disable_radar "0"

// Turn on/off freezecam on server
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
sv_disablefreezecam "0"

// Location from which clients can download missing files
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
sv_downloadurl ""

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2"
sv_drowning_damage_initial "2"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "5"
sv_drowning_damage_max "5"

// Flags: FCVAR_CHEAT
// Default: "0"
sv_dumpstringtables "0"

// When enabled player names won't have the (#) in front of their names its the same as another player.
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_duplicate_playernames_ok "0"

// Whether players are automatically assigned a DZ team
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_dz_autojointeam "1"

// Size of a cash bundle
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "50"
sv_dz_cash_bundle_size "50"

// Cash bundles to award for a successful contract kill
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10"
sv_dz_contractkill_reward "10"

// Number of cash bundles to award for exploring a new sector
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2"
sv_dz_exploration_payment_amount "2"

// Number of cash bundles to award for rescuing a hostage
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10"
sv_dz_hostage_rescue_reward "10"

// Whether non-server admins are allowed to use the dz_jointeam command
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_dz_jointeam_allowed "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "120"
sv_dz_player_max_health "120"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_dz_player_spawn_armor "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "120"
sv_dz_player_spawn_health "120"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "800"
sv_dz_show_enemy_name_scope_range "800"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_dz_show_security_door_item_price "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_dz_show_weapon_spawns "0"

// If set, will group players into their teams for spectating, if 0, spectating numbers will be the default individual players
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_dz_spec_group_teams "1"

// Number of players per team
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_dz_team_count "1"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_dz_warmup_tablet "1"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "weapon_glock"
sv_dz_warmup_weapon "weapon_glock"

// How many money stacks players are rewarded each danger zone wave
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "15"
sv_dz_zone_bombdrop_money_reward "15"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "1"
sv_dz_zone_damage "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2200"
sv_dz_zone_hex_radius "2200"

// When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_enable_delta_packing "0"

// Allow player speed to exceed maximum running speed
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_enablebunnyhopping "0"

// Enable support for old style (HL1) server queries
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
sv_enableoldqueries "0"

// The time between drops on the end match scoreboard 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
sv_endmatch_item_drop_interval "1.0"

// The time between drops on the end match scoreboard for ancient items 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "3.5"
sv_endmatch_item_drop_interval_ancient "3.5"

// The time between drops on the end match scoreboard for legendary items 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "2.0"
sv_endmatch_item_drop_interval_legendary "2.0"

// The time between drops on the end match scoreboard for mythical items 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.25"
sv_endmatch_item_drop_interval_mythical "1.25"

// The time between drops on the end match scoreboard for rare items 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
sv_endmatch_item_drop_interval_rare "1.0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_env_entity_makers_enabled "1"

// Seconds after client connect during which extra frames are buffered to prevent non-delta'd update
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "15.0"
sv_extra_client_connect_time "15.0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_extract_ammo_from_dropped_weapons "0"

// Number of degrees of aim 'fishtail' when making an extreme strafe direction change
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Min: "-5" Max: "5"
// Default: "0"
sv_extreme_strafe_accuracy_fishtail "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_falldamage_scale "1"

// Scale damage when distributed across two players
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_falldamage_to_below_player_multiplier "1"

// Landing on a another player's head gives them this ratio of the damage.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_falldamage_to_below_player_ratio "0"

// Set packet filtering by IP mode
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_filterban "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.8"
sv_fistpoint_delay "1.8"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "25"
sv_fistpunch_blocked_damage "25"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "10"
sv_fistpunch_damage "10"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "20"
sv_fistpunch_damage_hard "20"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.5"
sv_fistpunch_damage_to_player_multiplier "1.5"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
sv_fistpunch_impact_sounds "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "40"
sv_fistpunch_viewmove "40"

// Flashbang strength
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Min: "2" Max: "8"
// Default: "3.55"
sv_flashbang_strength "3.55"

// How frequent to hear the player's step sound or how fast they appear to be running from first person.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0.97"
sv_footstep_sound_frequency "0.97"

// Play footstep sound for players
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "1"
sv_footsteps "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_force_reflections "0"

// Will transmit all entities to client, regardless of PVS conditions (will still skip based on transmit flags, however).
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_force_transmit_ents "0"

// Will transmit players to all clients regardless of PVS checks.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_force_transmit_players "0"

// Force server side preloading.
// Flags: FCVAR_ARCHIVE
// Default: "0"
sv_forcepreload "0"

// World friction.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "5.2"
sv_friction "5.2"

// Any player (including Spectator team) can speak to any other player
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_full_alltalk "0"

// Force all clients to disable their game instructors.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_gameinstructor_disable "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_grassburn "0"

// World gravity.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "800"
sv_gravity "800"

// Shows grenade trajectory visualization in-game.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "0"
sv_grenade_trajectory "0"

// Dot-dash style grenade trajectory arc
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_grenade_trajectory_dash "0"

// Visible thickness of grenade trajectory arc
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0.1" Max: "1"
// Default: "0.2"
sv_grenade_trajectory_thickness "0.2"

// Length of time grenade trajectory remains visible.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0.1" Max: "20"
// Default: "20"
sv_grenade_trajectory_time "20"

// Length of time grenade trajectory remains visible as a spectator.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "8"
// Default: "4"
sv_grenade_trajectory_time_spectator "4"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_guardian_heavy_all "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_guardian_heavy_count "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_guardian_max_wave_for_heavy "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_guardian_min_wave_for_heavy "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_health_approach_enabled "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10"
sv_health_approach_speed "10"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_hegrenade_damage_multiplier "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_hegrenade_radius_multiplier "1"

// # of milliseconds to sleep per frame while hibernating
// Flags: FCVAR_RELEASE
// Default: "20"
sv_hibernate_ms "20"

// # of milliseconds to sleep per frame while hibernating but running the vgui dedicated server frontend
// Flags: FCVAR_RELEASE
// Default: "20"
sv_hibernate_ms_vgui "20"

// # of seconds to wait after final client leaves before hibernating.
// Flags: FCVAR_RELEASE
// Default: "5"
sv_hibernate_postgame_delay "5"

// When enabled will punt all GOTV clients during hibernation
// Flags: FCVAR_RELEASE
// Default: "0"
sv_hibernate_punt_tv_clients "0"

// Puts the server into extremely low CPU usage mode when no clients connected
// Flags: FCVAR_RELEASE
// Default: "1"
sv_hibernate_when_empty "1"

// 0 = OFF, 1 = Halloween, 2 = Winter
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_holiday_mode "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_REPLICATED
// Default: "0"
sv_hosting_lobby "0"

// Turn off Fire in the hole messages
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_ignoregrenaderadio "0"

// Player's active weapon will never run out of ammo. If set to 2 then player has infinite total ammo but still has to reload the magazine.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_infinite_ammo "0"

// Enable instanced baselines. Saves network overhead.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_instancebaselines "1"

// Initial upward velocity for player jumps; sqrt(2*gravity*height).
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "301.993377"
sv_jump_impulse "301.993377"

// How long should a kick ban from the server should last (in minutes)
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "15"
sv_kick_ban_duration "15"

// (0: do not kick on insecure servers; 1: kick players with Untrusted status or convicted by Overwatch; 2: kick players with any cooldown)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_kick_players_with_cooldown "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_knife_attack_extend_from_player_aabb "0"

// Cos of angle of incidence to ladder perpendicular for applying ladder_dampen
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Min: "-1" Max: "1"
// Default: "-0.707"
sv_ladder_angle "-0.707"

// Amount to dampen perpendicular movement on a ladder
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Min: "0" Max: "1"
// Default: "0.2"
sv_ladder_dampen "0.2"

// Scale top speed on ladders
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0.78"
sv_ladder_scale_speed "0.78"

// Player can lag compensate themselves.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
sv_lagcompensateself "0"

// Don't test validity of a lag comp restore, just do it.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "1"
sv_lagcompensationforcerestore "1"

// Flushes entity bone cache on lag compensation
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_lagflushbonecache "1"

// Push computed lag compensation amount by this many ticks.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_lagpushticks "0"

// Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )
// Flags: FCVAR_RELEASE
// Default: "0"
sv_lan "0"

// 1=Only improves success of jump+ducks to windows or vents (jump+duck to duck), 2=Improves success of all jump+ducks to ledges, 3=if you can get your eyes above it, you'll pull yourself up
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_ledge_mantle_helper "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
sv_ledge_mantle_helper_debug "0"

// 1=only does the feature if running in game mode Danger Zone, 0=Doesn't check game mode to run
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_ledge_mantle_helper_dzonly "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
sv_log_http_record_before_any_listeners ""

// Log server information to only one file.
// Flags: FCVAR_ARCHIVE
// Default: "0"
sv_log_onefile "0"

// Log server bans in the server logs.
// Flags: FCVAR_ARCHIVE
// Default: "0"
sv_logbans "0"

// If true when log when a query is blocked (can cause very large log files)
// Flags: FCVAR_RELEASE
// Default: "0"
sv_logblocks "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
sv_logdownloadlist "0"

// Echo log information to the console.
// Flags: FCVAR_ARCHIVE
// Default: "1"
sv_logecho "1"

// Log server information in the log file.
// Flags: FCVAR_ARCHIVE
// Default: "1"
sv_logfile "1"

// Flush the log file to disk on each write (slow).
// Flags: FCVAR_ARCHIVE
// Default: "0"
sv_logflush "0"

// Folder in the game directory where server logs will be stored.
// Flags: FCVAR_ARCHIVE
// Default: "logs"
sv_logsdir "logs"

// If set then include this secret when doing UDP logging (will use 0x53 as packet type, not usual 0x52)
// Flags: FCVAR_RELEASE
// Default: "0"
sv_logsecret "0"

// Uses a specific outgoing socket for sv udp logging
// Flags: FCVAR_RELEASE
// Default: "1"
sv_logsocket "1"

// Uses a specific outgoing socket for second source of sv udp logging
// Flags: FCVAR_RELEASE
// Default: "1"
sv_logsocket2 "1"

// Uses a substring match for second source of sv udp logging
// Flags: FCVAR_RELEASE
// Default: ""
sv_logsocket2_substr ""

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_massreport "0"

// Use the game's socket to communicate to the master server. If this is 0, then it will create a socket on -steamport + 1 to communicate to the master server on.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_master_share_game_socket "1"

// Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_matchend_drops_enabled "1"

// When enabled will automatically pause the match at next freeze time if less than 5 players are connected on each team.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_matchpause_auto_5v5 "0"

// Determines max allowed net_graph value for clients.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_max_allowed_net_graph "1"

// Maximum distance to transmit footstep sound effects.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1250.0"
sv_max_distance_transmit_footsteps "1250.0"

// Max dropped packets to process. Lower settings prevent lagged players from simulating too far in the past. Setting of 0 disables cap.
// Flags: FCVAR_RELEASE
// Default: "10"
sv_max_dropped_packets_to_process "10"

// Maximum queries per second to respond to from a single IP address.
// Flags: FCVAR_RELEASE
// Default: "10.0"
sv_max_queries_sec "10.0"

// Maximum queries per second to respond to from anywhere.
// Flags: FCVAR_RELEASE
// Default: "500"
sv_max_queries_sec_global "500"

// Window over which to average queries per second averages.
// Flags: FCVAR_RELEASE
// Default: "50000"
sv_max_queries_tracked_ips_max "50000"

// Window over which to average queries per second averages.
// Flags: FCVAR_RELEASE
// Default: "10"
sv_max_queries_tracked_ips_prune "10"

// Window over which to average queries per second averages.
// Flags: FCVAR_RELEASE
// Default: "30"
sv_max_queries_window "30"

// Prevents clients from running usercmds too far in the future. Prevents speed hacks.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "8"
sv_max_usercmd_future_ticks "8"

// Maximum move magnitude that can be requested by client.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1000"
sv_max_usercmd_move_magnitude "1000"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "128"
sv_maxclientframes "128"

// (If sv_mincmdrate is > 0), this sets the maximum value for cl_cmdrate.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_REPLICATED
// Default: "64"
sv_maxcmdrate "64"

// Max bandwidth rate allowed on server, 0 == unlimited
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "786432"
// Default: "0"
sv_maxrate "0"

// Maximum replay time in seconds
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "0" Max: "30"
// Default: "0"
sv_maxreplay "0"

// Server upper bound on net_maxroutable that a client can use.
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "576" Max: "1200"
// Default: "1200"
sv_maxroutable "1200"

// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "320"
sv_maxspeed "320"

// Maximum lag compensation in seconds
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0.200"
sv_maxunlag "0.200"

// Maximum updates per second that the server will allow
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "64"
sv_maxupdaterate "64"

// If set, whenever a game ends, if the server uptime exceeds this number of hours, the server will exit.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_maxuptimelimit "0"

// Maximum number of client-issued usrcmd ticks that can be replayed in packet loss conditions, 0 to allow no restrictions
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "16"
sv_maxusrcmdprocessticks "16"

// Hold client aim for multiple server sim ticks when client-issued usrcmd contains multiple actions (0: off; 1: hold this server tick; 2+: hold multiple ticks)
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_maxusrcmdprocessticks_holdaim "1"

// Print a warning when user commands get dropped due to insufficient usrcmd ticks allocated, number of seconds to throttle, negative disabled
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "-1"
sv_maxusrcmdprocessticks_warning "-1"

// Maximum speed any ballistically moving object is allowed to attain per axis.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3500"
sv_maxvelocity "3500"

// If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_memlimit "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "260.0"
sv_min_jump_landing_sound "260.0"

// This sets the minimum value for cl_cmdrate. 0 == unlimited.
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "64"
sv_mincmdrate "64"

// Min bandwidth rate allowed on server, 0 == unlimited
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "786432"
// Default: "16000"
sv_minrate "16000"

// Minimum updates per second that the server will allow
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "64"
sv_minupdaterate "64"

// If set, whenever a game ends, if the server uptime is less than this number of hours, the server will continue running regardless of sv_memlimit.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_minuptimelimit "0"

// Server queue reservation
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_DONTRECORD
// Default: ""
sv_mmqueue_reservation ""

// Extended time in seconds before mmqueue reservation expires.
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "5" Max: "180"
// Default: "21"
sv_mmqueue_reservation_extended_timeout "21"

// Time in seconds before mmqueue reservation expires.
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "5" Max: "180"
// Default: "21"
sv_mmqueue_reservation_timeout "21"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "32"
sv_multiplayer_maxtempentities "32"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "20"
sv_multiplayer_sounds "20"

// Test networking visibility distance
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "10000"
sv_netvisdist "10000"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_new_delta_bits "1"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "5"
sv_noclipaccelerate "5"

// If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.).
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
sv_noclipduringpause "0"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "5"
sv_noclipspeed "5"

// Disable MVP awards.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_nomvp "0"

// Disable nemesis and revenge.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_nonemesis "0"

// Turn on/off win panel on server
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_nowinpanel "0"

// NPCs over this distance from the player won't attempt to speak.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1024"
sv_npc_talker_maxdist "1024"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_occlude_players "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
sv_optimizedmovement "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_outofammo_indicator "0"

// Flags: FCVAR_RELEASE
// Default: "1"
sv_parallel_packentities "1"

// Pack and send snapshots in parallel for smoother server tick rate at the expense of spending more CPU.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_parallel_send "0"

// Flags: FCVAR_RELEASE
// Default: "1"
sv_parallel_sendsnapshot "1"

// Party!!
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_party_mode "0"

// Server password for entry into multiplayer games
// Flags: FCVAR_PROTECTED|FCVAR_NOTIFY|FCVAR_DONTRECORD|FCVAR_RELEASE
// Default: ""
sv_password "generic"

// Is the server pausable.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_pausable "0"

// Whether listen server is pausable when running -dev and playing solo against bots
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_pausable_dev "1"

// Whether dedicated server is pausable when running -dev and playing solo against bots
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
sv_pausable_dev_ds "0"

// What type of penertration to use. 0 = old CS, 1 = new penetration
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1"
sv_penetration_type "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_phys_props_block_movers "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-200"
sv_player_parachute_velocity "-200"

// Number of samples to maintain in player perf history
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Min: "1" Max: "128"
// Default: "20"
sv_playerperfhistorycount "20"

// When this setting is enabled only prime users can connect to this game server.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_prime_accounts_only "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_prop_door_open_speed_scale "1"

// Minimum number of file hashes to agree to form a consensus.
// Flags: FCVAR_RELEASE
// Default: "99999999"
sv_pure_consensus "99999999"

// If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client.
// Flags: FCVAR_RELEASE
// Default: "1"
sv_pure_kick_clients "1"

// Seconds of server idle time to flush the sv_pure file hash cache.
// Flags: FCVAR_RELEASE
// Default: "900"
sv_pure_retiretime "900"

// If set to 1, the server will print a message whenever a client is verifying a CRC for a file.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_pure_trace "0"

// Clientside physics push away (0=off, 1=only localplayer, 1=all players)
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
sv_pushaway_clientside "0"

// Minimum size of pushback objects
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "15"
sv_pushaway_clientside_size "15"

// How hard physics objects are pushed away from the players on the server.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "30000"
sv_pushaway_force "30000"

// How hard the hostage is pushed away from physics objects (falls off with inverse square of distance).
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "20000"
sv_pushaway_hostage_force "20000"

// Maximum amount of force applied to physics objects by players.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1000"
sv_pushaway_max_force "1000"

// Maximum of how hard the hostage is pushed away from physics objects.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1000"
sv_pushaway_max_hostage_force "1000"

// Maximum of how hard the player is pushed away from physics objects.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "10000"
sv_pushaway_max_player_force "10000"

// If a player is moving slower than this, don't push away physics objects (enables ducking behind things).
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "75"
sv_pushaway_min_player_speed "75"

// How hard the player is pushed away from physics objects (falls off with inverse square of distance).
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "200000"
sv_pushaway_player_force "200000"

// Skips SetupBones when npc's are outside the PVS
// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "1"
sv_pvsskipanimation "1"

// How many string commands per second clients are allowed to submit, 0 to disallow all string commands
// Flags: FCVAR_RELEASE
// Default: "40"
sv_quota_stringcmdspersecond "40"

// Number of minutes to ban users who fail rcon authentication
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "0"
// Default: "0"
sv_rcon_banpenalty "0"

// Enable/disable rcon logging.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_rcon_log "1"

// Max number of times a user can fail rcon authentication before being banned
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "1" Max: "20"
// Default: "10"
sv_rcon_maxfailures "10"

// Number of times a user can fail rcon authentication in sv_rcon_minfailuretime before being banned
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "1" Max: "20"
// Default: "5"
sv_rcon_minfailures "5"

// Number of seconds to track failed rcon authentications
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "1"
// Default: "30"
sv_rcon_minfailuretime "30"

// When set, rcon failed authentications will never ban this address, e.g. '127.0.0.1'
// Flags: FCVAR_RELEASE
// Default: ""
sv_rcon_whitelist_address ""

// Turn on recording of per player item time data into the server log.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_record_item_time_data "0"

// Cheat to test regenerative health systems
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
sv_regeneration_force_on "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "1.0"
sv_regeneration_wait_time "1.0"

// The region of the world to report this server in.
// Flags: FCVAR_RELEASE
// Default: "-1"
sv_region "-1"

// When enabled player avatars are exchanged via gameserver (0: off, 1: players, 2: server)
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_reliableavatardata "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_remove_old_ugc_downloads "1"

// If set to 1, the server records data needed to replay network stream from bot's perspective
// Flags: FCVAR_RELEASE
// Default: "1"
sv_replaybots "1"

// Time in seconds given for a lobby reservation.
// Flags: FCVAR_DEVELOPMENTONLY
// Min: "3" Max: "30"
// Default: "5"
sv_reservation_grace "5"

// Adjust server tickrate upon reservation
// Flags: FCVAR_RELEASE
// Default: "0"
sv_reservation_tickrate_adjustment "0"

// Time in seconds before lobby reservation expires.
// Flags: FCVAR_RELEASE
// Min: "5" Max: "180"
// Default: "45"
sv_reservation_timeout "45"

// Delay between the end match scoreboard being shown and the beginning of item drops.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "3.0"
sv_reward_drop_delay "3.0"

// Max view roll angle
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "0"
sv_rollangle "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "200"
sv_rollspeed "200"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_runcmds "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.1"
sv_script_think_interval "0.1"

// When searching for a dedicated server from lobby, restrict search to only dedicated servers having the same sv_search_key.
// Flags: FCVAR_RELEASE
// Default: ""
sv_search_key ""

// Force full sendtable sending path.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
sv_sendtables "0"

// A 360x60 (<16kb) image file in /csgo/ that will be displayed to spectators.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
sv_server_graphic1 ""

// A 220x45 (<16kb) image file in /csgo/ that will be displayed to spectators.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: ""
sv_server_graphic2 ""

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1"
sv_server_verify_blood_on_player "1"

// 0 = hide bot difficulty in bot name, 1 = show bot difficulty in bot name
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
sv_show_bot_difficulty_in_name "0"

// Print out props that are being culled/added by recipent proxies.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_show_cull_props "0"

// Force on if not prohibited
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_show_team_equipment_force_on "0"

// Determines whether +cl_show_team_equipment is prohibited.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_show_team_equipment_prohibit "0"

// Shows the user messages that the server is sending to clients. Setting this to 2 will show the contents of the message
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
sv_show_usermessage "0"

// Makes it so the voip icon is shown over enemies as well as allies when they are talking
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_show_voip_indicator_for_enemies "0"

// Show the (server) animation state for the specified entity (-1 for none).
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "-1"
sv_showanimstate "-1"

// Show activities in the (server) animation state display.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
sv_showanimstate_activities "0"

// 1 to output sv_showanimstate to Msg(). 2 to store in AnimStateServer.log. 3 for both.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
sv_showanimstate_log "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_showbullethits "0"

// Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_showimpacts "0"

// Shows extra data when bullets penetrate. (use sv_showimpacts_time to increase time shown)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_showimpacts_penetration "0"

// Duration bullet impact indicators remain before disappearing
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "10"
// Default: "4"
sv_showimpacts_time "4"

// Show bbox and dismount points for all ladders (must be set before level load.)
// 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_showladders "0"

// Show lag compensated hitboxes whenever a player is lag compensated.
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
sv_showlagcompensation "0"

// Duration to show lag-compensated hitboxes
// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Min: "0" Max: "10"
// Default: "4.0"
sv_showlagcompensation_duration "4.0"

// Show lag compensated hitboxes for the specified player index whenever a player fires.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
sv_showplayerhitboxes "0"

// Number of extra signon state confirmations required to disconnect a misbehaving client.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "20"
sv_signon_dos_disconnect "20"

// Dedicated server skirmish id to run
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_skirmish_id "0"

// Current name of the skybox texture
// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_REPLICATED
// Default: "sky_urb01"
sv_skyname "italy"

// Snowball strength
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Min: "2" Max: "64"
// Default: "12.0"
sv_snowball_strength "12.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_sound_discardextraunreliable "1"

// Show all EmitSound calls including their symbolic name and the actual wave file they resolved to. (-1 = for nobody, 0 = for everybody, n = for one entity)
// 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "-1"
sv_soundemitter_trace "-1"

// specfies what version of soundemitter system to use
// 
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "2"
sv_soundemitter_version "2"

// Players that have never moved since they spawned will drop the bomb after this amount of time.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "15"
sv_spawn_afk_bomb_drop_time "15"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "8.0"
sv_spawn_rappel_min_duration "8.0"

// Determines who spectators can hear: 0: only spectators; 1: all players; 2: spectated team; 3: self only; 4: nobody
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_spec_hear "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "60"
// Default: "0"
sv_spec_post_death_additional_time "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.0"
sv_spec_use_tournament_content_standards "0.0"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "5"
sv_specaccelerate "5"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "1"
sv_specnoclip "1"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "3"
sv_specspeed "3"

// Stamina penalty for jumping
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: ".080"
sv_staminajumpcost ".080"

// Stamina penalty for landing
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: ".050"
sv_staminalandcost ".050"

// Maximum stamina penalty
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "100"
// Default: "80"
sv_staminamax "80"

// Rate at which stamina recovers (units/sec)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "60"
sv_staminarecoveryrate "60"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.7"
sv_standable_normal "0.7"

// Collect CPU usage stats
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_stats "1"

// By default, player must maintain a reliable connection to Steam servers. When player Steam session drops, enforce it: 2 = instantly kick, 1 = kick at next spawn, 0 = do not kick.
// Flags: FCVAR_RELEASE
// Default: "2"
sv_steamauth_enforce "2"

// The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community.
// Flags: FCVAR_NOTIFY|FCVAR_RELEASE
// Default: ""
sv_steamgroup ""

// If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_steamgroup_exclusive "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED
// Default: "18"
sv_stepsize "18"

// Minimum stopping speed when on ground.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "80"
sv_stopspeed "80"

// If set to 1, the server calculates data and fills packets to bots. Used for perf testing.
// Flags: FCVAR_RELEASE
// Default: "0"
sv_stressbots "0"

// If set, notarget will cause entities to never think they are in the pvs
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_strict_notarget "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
sv_suppress_viewpunch "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_tablet_show_path_to_nearest_resq "0"

// Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma.
// Flags: FCVAR_NOTIFY|FCVAR_RELEASE
// Default: ""
sv_tags ""

// The number of seconds a player can continue talking after dying as if they were still alive
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_talk_after_dying_time "0"

// Dead players can hear all dead enemy communication (voice, chat)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_talk_enemy_dead "1"

// Living players can hear all living enemy communication (voice, chat)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_talk_enemy_living "0"

// Shows teamID over player's heads.  0 = off, 1 = on
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_teamid_overhead "1"

// Determines whether cl_teamid_overhead_always is prohibited.
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_teamid_overhead_always_prohibit "0"

// If >0, server will override cl_teamid_overhead_maxdist
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_teamid_overhead_maxdist "0"

// If >0, server will override cl_teamid_overhead_maxdist_spec
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_teamid_overhead_maxdist_spec "0"

// Buffer size for writing string table baselines
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "131072"
sv_temp_baseline_string_table_buffer_size "131072"

// Tests for scripted sequences that are embedded in the world. Run through your map with this set to check for NPCs falling through the world.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_test_scripted_sequences "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_test_steam_connection_failure "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_teststepsimulation "1"

// Check for thinktimes all on same timestamp.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_thinktimecheck "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_threaded_init "0"

// Minimum time before recognizing consecutive duck key
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0" Max: "2"
// Default: "0.4"
sv_timebetweenducks "0.4"

// After this many seconds without a message from a client, the client is dropped
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "65"
sv_timeout "65"

// Turns on turbo physics
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "0"
sv_turbophysics "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "4"
sv_turning_inaccuracy_angle_min "4"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "0.8"
sv_turning_inaccuracy_decay "0.8"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "0"
sv_turning_inaccuracy_enabled "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1000"
sv_ugc_manager_max_new_file_check_interval_secs "1000"

// Enables player lag compensation
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_unlag "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_unlag_debug "0"

// Disallow backtracking a player for lag compensation if it will cause them to become stuck
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
sv_unlag_fixstuck "0"

// Highest unlocked game chapter.
// Flags: FCVAR_ARCHIVE
// Default: "1"
sv_unlockedchapters "1"

// Explicitly delete dormant client entities caused by AllowImmediateReuse().
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
sv_useexplicitdelete "1"

// When enabled server will populate an additional random seed independent of the client
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_usercmd_custom_random_seed "1"

// Verify that edict changeinfos are being calculated properly (used to debug local network backdoor mode).
// Flags: FCVAR_RELEASE
// Default: "0"
sv_validate_edict_change_infos "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "8"
sv_vehicle_autoaim_scale "8"

// Overrides the max players reported to prospective clients
// Flags: FCVAR_RELEASE
// Default: "-1"
sv_visiblemaxplayers "-1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "-1"
sv_voice_proximity "-1"

// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_voice_proximity_minvolume "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_voice_proximity_positional "0"

// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_voice_proximity_use_falloff "0"

// Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension.
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "vaudio_celt"
sv_voicecodec "vaudio_celt"

// Flags: FCVAR_ARCHIVE|FCVAR_NOTIFY|FCVAR_RELEASE
// Default: "1"
sv_voiceenable "1"

// Allow voting during warmup?
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_vote_allow_in_warmup "0"

// Allow spectators to initiate votes?
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_vote_allow_spectators "0"

// How long after a vote passes until the action happens
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Max: "4.5"
// Default: "2"
sv_vote_command_delay "2"

// Allow spectators to vote on issues?
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_vote_count_spectator_votes "0"

// How often someone can individually call a vote.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "120"
sv_vote_creation_timer "120"

// Disallow vote kicking on the match point round.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_vote_disallow_kick_on_match_point "0"

// A vote that fails cannot be re-submitted for this long
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "300"
sv_vote_failure_timer "300"

// Can people hold votes to change levels?
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_vote_issue_changelevel_allowed "1"

// Can people hold votes to kick players from the server?
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_vote_issue_kick_allowed "1"

// Can people hold votes to load match from backup?
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_vote_issue_loadbackup_allowed "1"

// When enabled, admins load match from backup without players vote
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_vote_issue_loadbackup_spec_authoritative "0"

// When enabled, only admins load match from backup
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_vote_issue_loadbackup_spec_only "0"

// When enabled, admins load match from backup in safe time of the round only
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_vote_issue_loadbackup_spec_safe "1"

// Can people hold votes to ready/unready the match?
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_vote_issue_matchready_allowed "1"

// Allow players to extend the current map?
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_vote_issue_nextlevel_allowextend "1"

// Present players with a list of lowest playtime maps to choose from?
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_vote_issue_nextlevel_choicesmode "1"

// Can people hold votes to pause/unpause the match?
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_vote_issue_pause_match_allowed "1"

// When enabled, only admins start technical pause
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_vote_issue_pause_match_spec_only "0"

// Can people hold votes to restart the game?
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
sv_vote_issue_restart_game_allowed "0"

// Can people hold votes to scramble the teams?
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_vote_issue_scramble_teams_allowed "1"

// Can people hold votes to surrender?
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_vote_issue_surrrender_allowed "1"

// Can people hold votes to swap the teams?
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_vote_issue_swap_teams_allowed "1"

// Can people hold votes to time out?
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "1"
sv_vote_issue_timeout_allowed "1"

// How long should a kick vote ban someone from the server? (in minutes)
// Flags: FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "15"
sv_vote_kick_ban_duration "15"

// The minimum ratio of players needed to vote on an issue to resolve it.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0.01" Max: "1"
// Default: "0.501"
sv_vote_quorum_ratio "0.501"

// How long to allow voting on an issue
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "15"
sv_vote_timer_duration "15"

// Restricts vote to change level to rounds prior to match point (default 0, vote is never disallowed)
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_vote_to_changelevel_before_match_point "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.7"
sv_walkable_normal "0.7"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.8"
sv_water_movespeed_multiplier "0.8"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_water_swim_mode "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10"
sv_wateraccelerate "10"

// Vertical view fixup when eyes are near water plane.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Default: "12"
sv_waterdist "12"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_NOTIFY|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
sv_waterfriction "1"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0.85"
sv_weapon_encumbrance_per_item "0.85"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
sv_weapon_encumbrance_scale "0"

// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_weapon_require_use_grace_period "1"

// When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
sv_workshop_allow_other_maps "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
sys_minidumpexpandedspew "0"

// Lines of crash dump console spew to keep.
// Flags: FCVAR_RELEASE
// Default: "500"
sys_minidumpspewlines "500"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "3000"
tablet_c4_dist_max "3000"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "400"
tablet_c4_dist_min "400"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
template_debug "0"

// Debug test scripts.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
testscript_debug "0"

// Set to true when test scripts are running
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
testscript_running "0"

// how translucent the budget panel is
// Flags: FCVAR_ARCHIVE
// Default: "128"
texture_budget_background_alpha "128"

// number between 0 and 1
// Flags: FCVAR_ARCHIVE
// Default: ".25"
texture_budget_panel_bottom_of_history_fraction ".25"

// Show global times in the texture budget panel.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
texture_budget_panel_global "0"

// height in pixels of the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "284"
texture_budget_panel_height "284"

// width in pixels of the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "512"
texture_budget_panel_width "512"

// number of pixels from the left side of the game screen to draw the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "0"
texture_budget_panel_x "0"

// number of pixels from the top side of the game screen to draw the budget panel
// Flags: FCVAR_ARCHIVE
// Default: "450"
texture_budget_panel_y "450"

// Maximum think time in milliseconds, warning is printed if this is exceeded.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "10"
think_limit "0"

// Break into the debugger if this many or more traces are performed in a single think function. Negative numbers mean that the same think function may be broken into many times (once per [x] may traces), positive numbers mean each think will break only once.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_CHEAT
// Default: "0"
think_trace_limit "0"

// Enable setting affinity
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
threadpool_affinity "1"

// Consume the specified number of threads in the thread pool
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
threadpool_reserve "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
throttle_expensive_ai "0"

// The player's best time for the timed obstacle course
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_SS|FCVAR_ARCHIVE_XBOX
// Default: "0"
tr_best_course_time "0"

// Whether the local player has completed the initial training portion of the training map
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_SS|FCVAR_ARCHIVE_XBOX
// Default: "0"
tr_completed_training "0"

// Valve's best time for the timed obstacle course
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "352"
tr_valve_course_time "352"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
trace_report "0"

// GOTV advertises the match as watchable via game UI, clients watching via UI will not need to type password
// Flags: FCVAR_PROTECTED|FCVAR_NOTIFY|FCVAR_DONTRECORD|FCVAR_RELEASE
// Default: "0"
tv_advertise_watchable "0"

// When >=0 restricts autorecording only to the specified TV index
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "-1"
tv_allow_autorecording_index "-1"

// Allows cameraman_override to have effect. When this is set, the primary interactive caster will have all the relevant fields present in all network packets, in every snapshot. This allows the secondary cameraman (-interactivecaster that connects to a tv port) to override those fields some seconds later regardless of whether they changed originally or not.
// Flags: FCVAR_RELEASE
// Default: "0"
tv_allow_camera_man_override "0"

// Allows tournament production cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the camera man.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
tv_allow_camera_man_steamid ""

// Allows tournament production tv cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the tv camera man.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: ""
tv_allow_camera_man_steamid2 ""

// Auto director uses fixed level cameras for shots
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
tv_allow_static_shots "1"

// Automatically records all games as GOTV demos.
// Flags: FCVAR_RELEASE
// Default: "0"
tv_autorecord "0"

// Relay proxies retry connection after network timeout
// Flags: FCVAR_RELEASE
// Default: "1"
tv_autoretry "1"

// Automatically broadcasts all games as GOTV demos through Steam.
// Flags: FCVAR_RELEASE
// Default: "0"
tv_broadcast "0"

// Automatically broadcasts all games as GOTV[1] demos through Steam.
// Flags: FCVAR_RELEASE
// Default: "0"
tv_broadcast1 "0"

// Drop every Nth fragment
// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_RELEASE
// Default: "0"
tv_broadcast_drop_fragments "0"

// The frequency, in seconds, of sending keyframes and delta fragments to the broadcast relay server
// Flags: FCVAR_RELEASE
// Default: "3"
tv_broadcast_keyframe_interval "3"

// The frequency, in seconds, of sending keyframes and delta fragments to the broadcast1 relay server
// Flags: FCVAR_RELEASE
// Default: "3"
tv_broadcast_keyframe_interval1 "3"

// Max number of broadcast http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped.
// Flags: FCVAR_RELEASE
// Default: "20"
tv_broadcast_max_requests "20"

// Max number of broadcast1 http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped.
// Flags: FCVAR_RELEASE
// Default: "20"
tv_broadcast_max_requests1 "20"

// X-Origin-Auth header of the broadcast POSTs
// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_RELEASE
// Default: "gocastauth"
tv_broadcast_origin_auth "gocastauth"

// X-Origin-Auth header of the broadcast1 POSTs
// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_RELEASE
// Default: "gocastauth"
tv_broadcast_origin_auth1 "gocastauth"

// The interval, in seconds, of re-sending startup data to the broadcast relay server (useful in case relay crashes, restarts or startup data http request fails)
// Flags: FCVAR_RELEASE
// Default: "10"
tv_broadcast_startup_resend_interval "10"

// Terminate every broadcast with a stop command
// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_RELEASE
// Default: "1"
tv_broadcast_terminate "1"

// URL of the broadcast relay
// Flags: FCVAR_RELEASE
// Default: "http://localhost:8080"
tv_broadcast_url "http://localhost:8080"

// URL of the broadcast relay1
// Flags: FCVAR_RELEASE
// Default: "http://localhost:8080"
tv_broadcast_url1 "http://localhost:8080"

// Comma-separated IP ranges which require Steam3 challenge protocol even for GOTV connections
// Flags: FCVAR_RELEASE
// Default: ""
tv_challenge_steam_iprange ""

// Set the default chat group size
// Flags: FCVAR_RELEASE
// Default: "0"
tv_chatgroupsize "0"

// Limits spectators to chat only every n seconds
// Flags: FCVAR_RELEASE
// Default: "8"
tv_chattimelimit "8"

// GOTV debug info.
// Flags: FCVAR_RELEASE
// Default: "0"
tv_debug "0"

// GOTV broadcast delay in seconds
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0" Max: "120"
// Default: "10"
tv_delay "30"

// GOTV[instance 1] broadcast delay in seconds
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Min: "0" Max: "120"
// Default: "15"
tv_delay1 "15"

// Delays map change until broadcast is complete
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
tv_delaymapchange "1"

// Enable delta entity bit stream cache
// Flags: FCVAR_RELEASE
// Default: "2"
tv_deltacache "2"

// Dispatch clients to relay proxies: 0=never, 1=if appropriate, 2=always
// Flags: FCVAR_RELEASE
// Default: "1"
tv_dispatchmode "1"

// Dispatch clients to relay proxies based on load, 1.25 will prefer for every 4 local clients to put 5 clients on every connected relay
// Flags: FCVAR_RELEASE
// Default: "1.25"
tv_dispatchweight "1.25"

// Activates GOTV on server (0=off;1=on;2=on when reserved)
// Flags: FCVAR_NOTIFY|FCVAR_RELEASE
// Default: "0"
tv_enable "0"

// Activates GOTV[1] on server (0=off;1=on;2=on when reserved)
// Flags: FCVAR_NOTIFY|FCVAR_RELEASE
// Default: "0"
tv_enable1 "0"

// Indicates whether or not the tv should use delta frames for storage of intermediate frames. This takes more CPU but significantly less memory.
// Flags: FCVAR_RELEASE
// Default: "1"
tv_enable_delta_frames "1"

// When set to a valid key communication messages will be encrypted for GOTV
// Flags: FCVAR_RELEASE
// Default: ""
tv_encryptdata_key ""

// When set to a valid key public communication messages will be encrypted for GOTV
// Flags: FCVAR_RELEASE
// Default: ""
tv_encryptdata_key_pub ""

// Maximum client number on GOTV server.
// Flags: FCVAR_RELEASE
// Min: "0" Max: "255"
// Default: "128"
tv_maxclients "128"

// Reserves a certain number of GOTV client slots for relays.
// Flags: FCVAR_RELEASE
// Min: "0" Max: "255"
// Default: "0"
tv_maxclients_relayreserved "0"

// Max GOTV spectator bandwidth rate allowed, 0 == unlimited
// Flags: FCVAR_RELEASE
// Default: "196608"
tv_maxrate "196608"

// GOTV host name
// Flags: FCVAR_RELEASE
// Default: "GOTV"
tv_name "GOTV"

// Don't receive chat messages from other GOTV spectators
// Flags: FCVAR_ARCHIVE|FCVAR_USERINFO
// Default: "0"
tv_nochat "0"

// Overrides the GOTV master root address.
// Flags: FCVAR_RELEASE
// Default: "0"
tv_overridemaster "0"

// GOTV password for all clients
// Flags: FCVAR_PROTECTED|FCVAR_NOTIFY|FCVAR_DONTRECORD|FCVAR_RELEASE
// Default: ""
tv_password ""

// Flags: FCVAR_RELEASE
// Default: "1"
tv_playcast_delay_prediction "1"

// To alleviate intermittent network connectivity problems, this is the number of seconds to wait before actually re-syncing the stream after failure
// Flags: FCVAR_RELEASE
// Default: "0"
tv_playcast_delay_resync "0"

// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_RELEASE
// Default: "15"
tv_playcast_max_rcvage "15"

// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_RELEASE
// Default: "55"
tv_playcast_max_rtdelay "55"

// Get request X-Origin-Auth string
// Flags: FCVAR_MATERIAL_SYSTEM|FCVAR_RELEASE
// Default: ""
tv_playcast_origin_auth ""

// In case of intermittent network problems, how long should playcast retry fragment retrieval before resorting to resync
// Flags: FCVAR_RELEASE
// Default: "12"
tv_playcast_retry_timeout "12"

// Host GOTV[0] port
// Flags: FCVAR_RELEASE
// Default: "27020"
tv_port "27020"

// Host GOTV[1] port
// Flags: FCVAR_RELEASE
// Default: "27021"
tv_port1 "27021"

// GOTV password for relay proxies
// Flags: FCVAR_PROTECTED|FCVAR_NOTIFY|FCVAR_DONTRECORD|FCVAR_RELEASE
// Default: ""
tv_relaypassword ""

// Relay team radio commands to TV: 0=off, 1=on
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
tv_relayradio "0"

// Relay text chat data: 0=off, 1=say, 2=say+say_team
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "1"
tv_relaytextchat "1"

// Relay voice data: 0=off, 1=on
// Flags: FCVAR_RELEASE
// Default: "1"
tv_relayvoice "1"

// Snapshots broadcasted per second
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "32"
tv_snapshotrate "32"

// Snapshots broadcasted per second, GOTV[1]
// Flags: FCVAR_RELEASE
// Default: "32"
tv_snapshotrate1 "32"

// GOTV connection timeout in seconds.
// Flags: FCVAR_RELEASE
// Default: "30"
tv_timeout "30"

// Set title for GOTV spectator UI
// Flags: FCVAR_RELEASE
// Default: "GOTV"
tv_title "GOTV"

// Transmit all entities (not only director view)
// Flags: FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
tv_transmitall "1"

// Specifies the number of seconds worth of frames that the tv replay system should keep in memory. Increasing this greatly increases the amount of memory consumed by the TV system
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "16.0"
tv_window_size "16.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
ui_volume_scale "1.0"

// Report which panel is under the mouse.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawfocus "0"

// Report which panel has keyboard focus.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawkeyfocus "0"

// Draws the vgui panel hiearchy to the specified depth level.
// Flags: FCVAR_CHEAT
// Default: "0"
vgui_drawtree "0"

// Show panel bounds.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawtree_bounds "0"

// Highlight the selected panel
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawtree_draw_selected "0"

// Set to 1 to stop updating the vgui_drawtree view.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawtree_freeze "0"

// Draw the hidden panels.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawtree_hidden "0"

// Show the panel alpha values in the vgui_drawtree view.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawtree_panelalpha "0"

// Show the panel pointer values in the vgui_drawtree view.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawtree_panelptr "0"

// Draws the vgui popup list in hierarchy(1) or most recently used(2) order.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawtree_popupsonly "0"

// List the vgui_drawtree panels in render order.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawtree_render_order "0"

// Show scheme file for each panel
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vgui_drawtree_scheme "0"

// Draw the visible panels.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
vgui_drawtree_visible "1"

// Is a vgui panel currently active
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_MATERIAL_SYSTEM
// Default: ""
vgui_panel_active ""

// Decay factor exponent for view punch
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "18"
view_punch_decay "18"

// How closely the view tracks with the aim punch from weapon recoil
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "0.45"
view_recoil_tracking "0.45"

// Draw alien blood
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
violence_ablood "1"

// Show alien gib entities
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
violence_agibs "1"

// Draw human blood
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
violence_hblood "1"

// Show human gib entities
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
violence_hgibs "1"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0"
vis_force "0"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: ".5"
vismon_poll_frequency ".5"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "12"
vismon_trace_limit "12"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_buffer_debug "0"

// Toggle voice transmit and receive for casters. 0 = no caster, account number of caster to enable.
// Flags: FCVAR_ARCHIVE
// Default: "0"
voice_caster_enable "0"

// Caster Volume 0.0-1.0
// Flags: FCVAR_ARCHIVE
// Min: "0" Max: "1"
// Default: "1"
voice_caster_scale "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_debugfeedback "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_debugfeedbackfrom "0"

// Toggle voice transmit and receive.
// Flags: FCVAR_ARCHIVE
// Default: "1"
voice_enable "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.0"
voice_fadeouttime "0.0"

// Flags: FCVAR_ARCHIVE
// Default: "1"
voice_forcemicrecord "1"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "100.0"
voice_gain_downward_multiplier "100.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "35"
voice_gain_max "35"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1.0"
voice_gain_rate "1.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "32000"
voice_gain_target "32000"

// Get voice input from 'voice_input.wav' rather than from the microphone.
// Flags: FCVAR_RELEASE
// Default: "0"
voice_inputfromfile "0"

// Flags: FCVAR_USERINFO
// Default: "0"
voice_loopback "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.5"
voice_minimum_gain "0.5"

// Flags: FCVAR_ARCHIVE
// Default: "0"
voice_mixer_boost "0"

// Flags: FCVAR_ARCHIVE
// Default: "0"
voice_mixer_mute "0"

// Flags: FCVAR_ARCHIVE
// Default: "1.0"
voice_mixer_volume "1.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
voice_overdrive "2"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.4"
voice_overdrivefadetime "0.4"

// Flags: FCVAR_GAMEDLL|FCVAR_CHEAT
// Default: "0.5f"
voice_player_speaking_delay_threshold "0.5f"

// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Default: "0"
voice_positional "0"

// Flags: FCVAR_RELEASE
// Default: "6.0"
voice_positional_seconds_after_death "6.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_profile "0"

// If true use Steam to record voice (not the engine codec)
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_record_steam "0"

// Record mic data and decompressed voice data into 'voice_micdata.wav' and 'voice_decompressed.wav'
// Flags: FCVAR_RELEASE
// Default: "0"
voice_recordtofile "0"

// Overall volume of voice over IP 0.0-1.0
// Flags: FCVAR_ARCHIVE|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "1.0"
voice_scale "1.0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
voice_serverdebug "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_showchannels "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_showincoming "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "2"
voice_steal "2"

// Toggle voice system.
// Flags: FCVAR_ARCHIVE
// Default: "1"
voice_system_enable "1"

// Flags: FCVAR_CLIENTDLL|FCVAR_ARCHIVE
// Default: "4000"
voice_threshold "4000"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0.5"
voice_thresold_delay "0.5"

// Turns on debug output with detailed spew about voice data processing.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_verbose "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "false"
voice_vox "false"

// Saves each speaker's voice data into separate .wav files
// 
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_writevoices "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
voice_xsend_debug "0"

// Sound volume
// Flags: FCVAR_ARCHIVE|FCVAR_ARCHIVE_XBOX
// Min: "0" Max: "1"
// Default: "1.0"
volume "1.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vprof_counters "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vprof_counters_show_minmax "0"

// Interval (in seconds) at which vprof will batch up data and dump it to the console.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vprof_dump_oninterval "0"

// Framerate at which vprof will begin to dump spikes to the console. 0 = disabled, negative to reset after dump
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vprof_dump_spikes "0"

// Budget gtNode to start report from when doing a dump spikes
// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
vprof_dump_spikes_budget_group ""

// Set to 1 to get a hierarchy report whith vprof_dump_spikes
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vprof_dump_spikes_hiearchy "0"

// Node to start report from when doing a dump spikes
// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
vprof_dump_spikes_node ""

// Whether to use most terse output
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vprof_dump_spikes_terse "0"

// Draw the vprof graph.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vprof_graph "0"

// Flags: FCVAR_ARCHIVE
// Default: "256"
vprof_graphheight "256"

// Flags: FCVAR_ARCHIVE
// Default: "512"
vprof_graphwidth "512"

// Set a specific scope to start showing vprof tree
// Flags: FCVAR_DEVELOPMENTONLY
// Default: ""
vprof_scope ""

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
vprof_scope_entity_gamephys "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
vprof_scope_entity_thinks "0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "999.0"
vprof_server_spike_threshold "999.0"

// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vprof_server_thread "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
vprof_think_limit "0"

// number of milliseconds that a node must exceed to turn red in the vprof panel
// Flags: FCVAR_ARCHIVE
// Default: "0.3"
vprof_unaccounted_limit "0.3"

// Set to one to show average and peak times
// Flags: FCVAR_ARCHIVE
// Default: "1"
vprof_verbose "1"

// Above this many milliseconds render the label red to indicate slow code.
// Flags: FCVAR_ARCHIVE
// Default: "10"
vprof_warningmsec "10"

// Force VXConsole updates every frame; smoother vprof data on PS3 but at a slight (~0.2ms) perf cost.
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
vx_do_not_throttle_events "0"

// All Warning()/DevWarning()/... calls will attach a callstack
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "0"
warningcallstacks_enable "0"

// Length of automatic warning callstacks
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "5"
warningcallstacks_length "5"

// Force spread to the specified value.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
weapon_accuracy_forcespread "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_ARCHIVE|FCVAR_REPLICATED
// Default: "0"
weapon_accuracy_logging "0"

// Disable weapon inaccuracy spread
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
weapon_accuracy_nospread "0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "1"
weapon_accuracy_shotgun_spread_patterns "1"

// Scale factor for jumping inaccuracy, set to 0 to make jumping accuracy equal to standing
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Min: "0"
// Default: "1.0"
weapon_air_spread_scale "1.0"

// If set to non-zero, weapons will delete themselves after the specified time (in seconds) if no players are near.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
weapon_auto_cleanup_time "0"

// Force weapon inaccuracy to be in exactly the up direction
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
weapon_debug_inaccuracy_only_up "0"

// Force all shots to have maximum inaccuracy
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "0"
weapon_debug_max_inaccuracy "0"

// The amount the gun should dip when the player lands after a jump.
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "20.0"
weapon_land_dip_amt "20.0"

// If set to non-zero, will remove the oldest dropped weapon to maintain the specified number of dropped weapons in the world.
// Flags: FCVAR_GAMEDLL|FCVAR_RELEASE
// Default: "0"
weapon_max_before_cleanup "0"

// Maximum angle of slope on which the molotov will detonate
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL|FCVAR_REPLICATED
// Min: "0" Max: "90"
// Default: "30.0"
weapon_molotov_maxdetonateslope "30.0"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT
// Default: "1"
weapon_near_empty_sound "1"

// DEPRECATED. Recoil now decays using weapon_recoil_decay_coefficient
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "0.55"
weapon_recoil_cooldown "0.55"

// Decay factor exponent for weapon recoil
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "3.5"
weapon_recoil_decay1_exp "3.5"

// Decay factor exponent for weapon recoil
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "8"
weapon_recoil_decay2_exp "8"

// Decay factor (linear term) for weapon recoil
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "18"
weapon_recoil_decay2_lin "18"

// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "2.0"
weapon_recoil_decay_coefficient "2.0"

// Overall scale factor for recoil. Used to reduce recoil on specific platforms
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "2.0"
weapon_recoil_scale "2.0"

// Overall scale factor for recoil. Used to reduce recoil.  Only for motion controllers
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "1.0"
weapon_recoil_scale_motion_controller "1.0"

// Initial recoil suppression factor (first suppressed shot will use this factor * standard recoil, lerping to 1 for later shots
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "0.75"
weapon_recoil_suppression_factor "0.75"

// Number of shots before weapon uses full recoil
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "4"
weapon_recoil_suppression_shots "4"

// Amount of variance per recoil impulse
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Min: "0" Max: "1"
// Default: "0.55"
weapon_recoil_variance "0.55"

// Decay factor for weapon recoil velocity
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "4.5"
weapon_recoil_vel_decay "4.5"

// Additional (non-aim) punch added to view from recoil
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "0.055"
weapon_recoil_view_punch_extra "0.055"

// When enabled will show knife reticle on clients. Used for game modes requiring target id display when holding a knife.
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_RELEASE
// Default: "0"
weapon_reticle_knife_show "0"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
weapon_showproficiency "0"

// Scaling for falloff of weapon firing sounds
// Flags: FCVAR_GAMEDLL|FCVAR_REPLICATED|FCVAR_CHEAT|FCVAR_RELEASE
// Default: "1.0"
weapon_sound_falloff_multiplier "1.0"

// time remaining in trial mode
// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_SS|FCVAR_ARCHIVE_XBOX
// Default: "2700.0"
xbox_arcade_remaining_trial_time "2700.0"

// debug unlocking arcade title
// Flags: FCVAR_DEVELOPMENTONLY
// Default: "1"
xbox_arcade_title_unlocked "1"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "1"
xbox_autothrottle "1"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0.0"
xbox_steering_deadzone "0.0"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "100"
xbox_throttlebias "100"

// Flags: FCVAR_GAMEDLL|FCVAR_ARCHIVE
// Default: "200"
xbox_throttlespoof "200"

// Flags: FCVAR_DEVELOPMENTONLY|FCVAR_GAMEDLL
// Default: "0"
xc_crouch_debounce "0"

